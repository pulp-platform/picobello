# Copyright 2025 ETH Zurich and University of Bologna.
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

include:
  - local: .gitlab/common.yml
  - local: .gitlab/sw-tests.yml

stages:
  - init
  - build
  - run

##################
# Initialization #
##################

init-deps:
  stage: init
  extends:
    - .init-deps-tpl
  artifacts:
    paths:
      - pd/ci.yml
      - pd/.gitlab/sw-tests-chip.yml

########################
# Build Software Tests #
########################

sn-sw:
  stage: build
  extends:
    - .sn-sw-tpl

chs-sw:
  stage: build
  extends:
    - .chs-sw-tpl

########################
# Generate RTL Sources #
########################

generate-rtl:
  stage: build
  extends:
    - .generate-rtl-tpl

#####################
# Build Simulations #
#####################

vsim-compile:
  stage: build
  needs:
    - generate-rtl
  variables:
    FLOO_GEN_ARGS: --no-format
  script:
    - make vsim-compile | tee compile.log 2>&1
    - '! grep "\*\* Error" compile.log'
  artifacts:
    paths:
      - target/sim/vsim/work
    expire_in: 1 day

###################
# Run simulations #
###################

sim-vsim:
  stage: run
  extends:
    - .cache-deps
    - .init-env
    - .sw-tests
  variables:
    LOG_FILE: target/sim/vsim/transcript
  needs:
    - chs-sw
    - sn-sw
    - vsim-compile
  script:
    # Run the simulation
    - make vsim-run-batch
    # Check either success or failure for non-zero exit codes
    - 'if [ -z "${NZ_EXIT_CODE}" ]; then grep "] SUCCESS" transcript || (exit 1); else grep "] FAILED: return code ${NZ_EXIT_CODE}" transcript || (exit 1); fi'
    # Check for UART output
    - 'if [ ! -z "${USTR}" ]; then (grep " \[UART\] ${USTR}" transcript); fi'
    # Check for any fatal errors
    - 'if grep "Fatal:" transcript; then exit 1; fi'
    # Check for any errors (except one for non-zero exit codes)
    - 'if [ ! -z "${NZ_EXIT_CODE}" ]; then count=$(grep -c "Error:" transcript); if [ "$count" -ne 1 ]; then exit 1; fi; else if grep -q "Error:" transcript; then exit 1; fi; fi'
  artifacts:
    paths:
      - transcript

###################
# Physical Design #
###################

subpipe:
  stage: build
  needs:
    - init-deps
  trigger:
    include:
      - artifact:
        - pd/ci.yml
        - pd/.gitlab/sw-tests-chip.yml
        job: init-deps
    strategy: depend

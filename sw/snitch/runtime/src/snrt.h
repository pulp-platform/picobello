// Copyright 2023 ETH Zurich and University of Bologna.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include <stddef.h>
#include <stdint.h>

// Configuration- and system-specific definitions (HAL)
#include "pb_addrmap.h"
#include "snitch_cluster_cfg.h"
#include "snitch_cluster_peripheral_addrmap.h"
#include "pb_raw_addrmap.h"
#define SNRT_TCDM_START_ADDR PICOBELLO_ADDRMAP_CLUSTER_0_TCDM_BASE_ADDR

// TODO: the 40000 stride is hardcoded here, but it would better be
//       autogenerated by Floogen. At the same time that would be
//       exaggeratedly convoluted. It would probably be better to remove
//       this suffix from PeakRDL if possible.
typedef snitch_cluster__stride40000_t snitch_cluster_t;

// Forward declarations
#include "alloc_decls.h"
#include "cls_decls.h"
#include "dma_decls.h"
#include "memory_decls.h"
#include "riscv_decls.h"
#include "start_decls.h"
#include "sync_decls.h"
#include "team_decls.h"

// Implementation
#include "alloc.h"
#include "alloc_v2.h"
#include "cls.h"
#include "cluster_interrupts.h"
#include "copift.h"
#include "dm.h"
#include "dma.h"
#include "dump.h"
#include "eu.h"
#include "kmp.h"
#include "omp.h"
#include "pb_memory.h"
#include "perf_cnt.h"
#include "printf.h"
#include "riscv.h"
#include "snitch_cluster_start.h"
#include "ssr.h"
#include "sync.h"
#include "team.h"
#include "types.h"

// Accelerators
#include "datamover/archi_datamover.h"
#include "datamover/hal_datamover.h"
#include "datamover/datamover_utils.h"
#include "redmule/archi_redmule.h"
#include "redmule/hal_redmule.h"
#include "redmule/redmule_utils.h"

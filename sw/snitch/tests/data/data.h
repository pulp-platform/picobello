// Copyright 2023 ETH Zurich and University of Bologna.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Yvan Tortorella <yvan.tortorella@unibo.it>
//

#ifndef __ARCHI_REDMULE_H__
#define __ARCHI_REDMULE_H__

/*
 * |========================================================================|
 * ||                                                                      ||
 * ||Control and generic configuration register layout                     ||
 * |========================================================================|
 * || # reg |  offset  |  bits   |   bitmask    ||  content                ||
 * ||-------+----------+---------+--------------++-------------------------||
 * ||    0  |  0x0000  |  31: 0  |  0xFFFFFFFF  ||  TRIGGER                ||
 * ||    1  |  0x0004  |  31: 0  |  0xFFFFFFFF  ||  ACQUIRE                ||
 * ||    2  |  0x0008  |  31: 0  |  0xFFFFFFFF  ||  EVT_ENABLE             ||
 * ||    3  |  0x000c  |  31: 0  |  0xFFFFFFFF  ||  STATUS                 ||
 * ||    4  |  0x0010  |  31: 0  |  0xFFFFFFFF  ||  RUNNING_JOB            ||
 * ||    5  |  0x0014  |  31: 0  |  0xFFFFFFFF  ||  SOFT_CLEAR             ||
 * |========================================================================|
 * ||                                                                      ||
 * ||Job-dependent registers layout                                        ||
 * |========================================================================|
 * || # reg |  offset  |  bits   |   bitmask    ||  content                ||
 * ||-------+----------+---------+--------------++-------------------------||
 * ||    0  |  0x0040  |  31: 0  |  0xFFFFFFFF  ||  X_ADDR                 ||
 * ||-------+----------+---------+--------------++-------------------------||
 * ||    1  |  0x0044  |  31: 0  |  0xFFFFFFFF  ||  W_ADDR                 ||
 * ||-------+----------+---------+--------------++-------------------------||
 * ||    2  |  0x0048  |  31: 0  |  0xFFFFFFFF  ||  Z_ADDR                 ||
 * ||-------+----------+---------+--------------++-------------------------||
 * ||    3  |  0x004C  |         |              ||  Matrix Config 0 Reg    ||
 * ||       |          |  31:16  |  0xFFFF0000  ||  K Size (W Columns)     ||
 * ||       |          |  15: 0  |  0x0000FFFF  ||  M Size (X Rows)        ||
 * ||-------+----------+---------+--------------++-------------------------||
 * ||    4  |  0x0050  |         |              ||  Matrix Config 1 Reg    ||
 * ||       |          |  31:16  |  0xFFFFFFFF  ||  N Size (X Cols/W Rows) ||
 * ||-------+----------+---------+--------------++-------------------------||
 * ||    5  |  0x0054  |         |              ||  Matrix Arithmetic Reg  ||
 * ||       |          |  12:10  |  0x00001C00  ||  Operation selection    ||
 * ||       |          |   9: 7  |  0x00000380  ||  Input/Output format    ||
 * |========================================================================|
 *
 */

#define ARCHI_CL_EVT_ACC0 0
#define ARCHI_CL_EVT_ACC1 1

// Base address
#define REDMULE_BASE_ADD CLUSTER_ZERO_MEM_END_ADDR

// Commands
#define REDMULE_TRIGGER 0x00
#define REDMULE_ACQUIRE 0x04
#define REDMULE_FINISHED 0x08
#define REDMULE_STATUS 0x0C
#define REDMULE_RUNNING_JOB 0x10
#define REDMULE_SOFT_CLEAR 0x14

// Registers
#define REDMULE_REG_OFFS 0x40
#define REDMULE_REG_X_PTR 0x00
#define REDMULE_REG_W_PTR 0x04
#define REDMULE_REG_Z_PTR 0x08
#define REDMULE_MCFG0_PTR 0x0C
#define REDMULE_MCFG1_PTR 0x10
#define REDMULE_ARITH_PTR 0x14

#define HWPE_EVT_OFFS 0x94
#define CK_GATE_OFFS 0x9C

// OPs definition
#define MATMUL 0x0
#define GEMM 0x1
#define ADDMAX 0x2
#define ADDMIN 0x3
#define MULMAX 0x4
#define MULMIN 0x5
#define MAXMIN 0x6
#define MINMAX 0x7

// GEMM formats
#define Float8 0x0
#define Float16 0x1
#define Float8Alt 0x2
#define Float16Alt 0x3

// FP Formats encoding
#define FP16 0x2
#define FP8 0x3
#define FP16ALT 0x4
#define FP8ALT 0x5

#endif

#ifndef __HAL_REDMULE_H__
#define __HAL_REDMULE_H__

/* LOW-LEVEL HAL */
#define REDMULE_ADDR_BASE REDMULE_BASE_ADD
#define REDMULE_ADDR_SPACE 0x00000100

#define HWPE_WRITE(value, offset) *(volatile int *)(REDMULE_ADDR_BASE + offset) = value
#define HWPE_READ(offset) *(volatile int *)(REDMULE_ADDR_BASE + offset)

static inline void redmule_x_add_set(unsigned int value) {
  HWPE_WRITE(value, REDMULE_REG_OFFS + REDMULE_REG_X_PTR);
}

static inline void redmule_w_add_set(unsigned int value) {
  HWPE_WRITE(value, REDMULE_REG_OFFS + REDMULE_REG_W_PTR);
}

static inline void redmule_z_add_set(unsigned int value) {
  HWPE_WRITE(value, REDMULE_REG_OFFS + REDMULE_REG_Z_PTR);
}

static inline void redmule_mcfg_set(uint32_t mcfg0, uint32_t mcfg1) {
  HWPE_WRITE(mcfg0, REDMULE_REG_OFFS + REDMULE_MCFG0_PTR);
  HWPE_WRITE(mcfg1, REDMULE_REG_OFFS + REDMULE_MCFG1_PTR);
}

static inline void redmule_arith_set(uint32_t arith) {
  HWPE_WRITE(arith, REDMULE_REG_OFFS + REDMULE_ARITH_PTR);
}

static inline void hwpe_trigger_job() { HWPE_WRITE(0, REDMULE_TRIGGER); }

static inline int hwpe_acquire_job() { return HWPE_READ(REDMULE_ACQUIRE); }

static inline unsigned int hwpe_get_status() { return HWPE_READ(REDMULE_STATUS); }

static inline void hwpe_soft_clear() {
  volatile int i;
  HWPE_WRITE(0, REDMULE_SOFT_CLEAR);
}

static inline void hwpe_evt_clear(int value) {
  HWPE_WRITE(value, HWPE_EVT_OFFS);
}

static inline void hwpe_cg_enable() { HWPE_WRITE(1, CK_GATE_OFFS); }

static inline void hwpe_cg_disable() { HWPE_WRITE(0, CK_GATE_OFFS); }

void redmule_cfg(unsigned int x, unsigned int w, unsigned int z, uint16_t m_size, uint16_t n_size,
                 uint16_t k_size, uint8_t gemm_op, uint8_t gemm_fmt) {

  uint32_t mcfg_reg0 = 0;
  uint32_t mcfg_reg1 = 0;
  uint32_t arith_reg = 0;

  mcfg_reg0 = (k_size << 16) | (m_size << 0);
  mcfg_reg1 = n_size << 0;

  arith_reg = (gemm_op << 10) | (gemm_fmt << 7);

  redmule_x_add_set((unsigned int)x);
  redmule_w_add_set((unsigned int)w);
  redmule_z_add_set((unsigned int)z);
  redmule_mcfg_set((unsigned int)mcfg_reg0, (unsigned int)mcfg_reg1);
  redmule_arith_set((unsigned int)arith_reg);
}

#endif

#ifndef REDMULE_UTILS_H
#define REDMULE_UTILS_H

#define ERR 0x0011

int redmule16_compare_int(uint32_t *actual_z, uint32_t *golden_z, int len) {
  uint32_t actual_word = 0;
  uint16_t actual_MSHWord, actual_LSHWord;
  uint32_t golden_word = 0;
  uint16_t golden_MSHWord, golden_LSHWord;
  uint32_t actual = 0;
  uint32_t golden = 0;

  int errors = 0;
  int error;

  for (int i = 0; i < len; i++) {
    error = 0;
    actual_word = *(actual_z + i);
    golden_word = *(golden_z + i);

    // int error = ((actual_word ^ golden_word) & ~IGNORE_BITS_COMPARE) ? 1 : 0;
    uint16_t diff = 0;

    // Chechink Least Significant Half-Word
    actual_LSHWord = (uint16_t)(actual_word & 0x0000FFFF);
    golden_LSHWord = (uint16_t)(golden_word & 0x0000FFFF);

    diff = (actual_LSHWord > golden_LSHWord)   ? (actual_LSHWord - golden_LSHWord)
           : (actual_LSHWord < golden_LSHWord) ? (golden_LSHWord - actual_LSHWord)
                                               : 0;

    if (diff > ERR) {
      error = 1;
#ifdef VERBOSE
      printf("diff: 0x%08x\n", diff);
      printf("LSW: Error!\n");
#endif
    }

    // Checking Most Significant Half-Word
    actual_MSHWord = (uint16_t)((actual_word >> 16) & 0x0000FFFF);
    golden_MSHWord = (uint16_t)((golden_word >> 16) & 0x0000FFFF);

    diff = (actual_MSHWord > golden_MSHWord)   ? (actual_MSHWord - golden_MSHWord)
           : (actual_MSHWord < golden_MSHWord) ? (golden_MSHWord - actual_MSHWord)
                                               : 0;

    if (diff > ERR) {
      error = 1;
#ifdef VERBOSE
      printf("diff: 0x%08x\n", diff);
      printf("MSW: Error!\n");
#endif
    }

    errors += error;

#ifdef DEBUG
    printf("Golden: 0x%08x; Actual: 0x%08x,\n", golden_word, actual_word);
#endif

#ifdef VERBOSE
    if (error) {
      if (errors == 1) printf("  golden     <- actual     @ address    @ index\n");
      printf("0x%08x <- 0x%08x @ 0x%08x @ 0x%08x\n", golden_word, actual_word, (actual_z + i),
                 i * 4);
    }
#endif
  }
  return errors;
}

int redmule8_compare_int(uint32_t *actual_z, uint32_t *golden_z, int len) {
  uint32_t actual_word = 0;
  uint8_t actual_Byte0, actual_Byte1, actual_Byte2, actual_Byte3;
  uint32_t golden_word = 0;
  uint8_t golden_Byte0, golden_Byte1, golden_Byte2, golden_Byte3;
  uint32_t actual = 0;
  uint32_t golden = 0;

  int errors = 0;
  int error;

  for (int i = 0; i < len; i++) {
    error = 0;
    actual_word = *(actual_z + i);
    golden_word = *(golden_z + i);

    // int error = ((actual_word ^ golden_word) & ~IGNORE_BITS_COMPARE) ? 1 : 0;
    uint8_t diff = 0;

    // Cheching Byte0
    actual_Byte0 = (uint8_t)(actual_word & 0x000000FF);
    golden_Byte0 = (uint8_t)(golden_word & 0x000000FF);

    diff = (actual_Byte0 > golden_Byte0)   ? (actual_Byte0 - golden_Byte0)
           : (actual_Byte0 < golden_Byte0) ? (golden_Byte0 - actual_Byte0)
                                           : 0;

    if (diff > ERR) {
      error = 1;
#ifdef VERBOSE
      printf("diff: 0x%08x\n", diff);
      printf("Byte0: Error!\n");
#endif
    }

    // Cheching Byte1
    actual_Byte1 = (uint8_t)((actual_word >> 8) & 0x000000FF);
    golden_Byte1 = (uint8_t)((golden_word >> 8) & 0x000000FF);

    diff = (actual_Byte1 > golden_Byte1)   ? (actual_Byte1 - golden_Byte1)
           : (actual_Byte1 < golden_Byte1) ? (golden_Byte1 - actual_Byte1)
                                           : 0;

    if (diff > ERR) {
      error = 1;
#ifdef VERBOSE
      printf("diff: 0x%08x\n", diff);
      printf("Byte1: Error!\n");
#endif
    }

    // Cheching Byte2
    actual_Byte2 = (uint8_t)((actual_word >> 16) & 0x000000FF);
    golden_Byte2 = (uint8_t)((golden_word >> 16) & 0x000000FF);

    diff = (actual_Byte2 > golden_Byte2)   ? (actual_Byte2 - golden_Byte2)
           : (actual_Byte2 < golden_Byte2) ? (golden_Byte2 - actual_Byte2)
                                           : 0;

    if (diff > ERR) {
      error = 1;
#ifdef VERBOSE
      printf("diff: 0x%08x\n", diff);
      printf("Byte2: Error!\n");
#endif
    }

    // Cheching Byte3
    actual_Byte3 = (uint8_t)((actual_word >> 24) & 0x000000FF);
    golden_Byte3 = (uint8_t)((golden_word >> 24) & 0x000000FF);

    diff = (actual_Byte3 > golden_Byte3)   ? (actual_Byte3 - golden_Byte3)
           : (actual_Byte3 < golden_Byte3) ? (golden_Byte3 - actual_Byte3)
                                           : 0;

    if (diff > ERR) {
      error = 1;
#ifdef VERBOSE
      printf("diff: 0x%08x\n", diff);
      printf("Byte3: Error!\n");
#endif
    }

    errors += error;

#ifdef DEBUG
    printf("Golden: 0x%08x; Actual: 0x%08x,\n", golden_word, actual_word);
#endif

#ifdef VERBOSE
    if (error) {
      if (errors == 1) printf("  golden     <- actual     @ address    @ index\n");
      printf("  0x%08x <- 0x%08x @ 0x%08x @ 0x%08x\n", golden_word, actual_word, (actual_z + i),
                 i * 4);
    }
#endif
  }
  return errors;
}

#endif

/* Header file generated by RedMulE Golden Model */

uint32_t golden [512] __attribute__ ((aligned(64))) = {
0x49264919,
0x48d94969,
0x497448a8,
0x4771489b,
0x498e4846,
0x49364896,
0x481f4829,
0x496b48fa,
0x48cb48df,
0x488049b6,
0x477f48db,
0x48544954,
0x48b447d7,
0x49914873,
0x494b4900,
0x491f48fc,
0x48b348dc,
0x486e49cf,
0x488448e8,
0x482b4861,
0x491347fd,
0x48e147a8,
0x487d4738,
0x494e48f8,
0x484f48b5,
0x48984940,
0x4729493b,
0x485849ab,
0x48544806,
0x48dd482c,
0x492d48b6,
0x484948a5,
0x48704822,
0x4898483e,
0x476e47cf,
0x45d8469e,
0x484f4741,
0x483647e9,
0x472247ac,
0x48f4485f,
0x4705484c,
0x46ba48ac,
0x46f8487b,
0x467c47d6,
0x46f9475b,
0x48514760,
0x48514828,
0x490d472d,
0x483f47c7,
0x48ac4831,
0x48194817,
0x47bc4840,
0x484447bc,
0x48a947ea,
0x483947d5,
0x48f2489a,
0x479c475a,
0x487c493e,
0x46ae4808,
0x46f648bd,
0x47254720,
0x484047e8,
0x48a348ac,
0x48ad4853,
0x493b48d6,
0x486d4892,
0x485a48fb,
0x4830484c,
0x4973488a,
0x491f47dd,
0x482b4825,
0x49584911,
0x4815491c,
0x484e494d,
0x47a24951,
0x4896492d,
0x49074704,
0x494f4811,
0x48f248bc,
0x48dc485c,
0x48c04835,
0x482948d2,
0x47aa4770,
0x472f47be,
0x48834638,
0x48ad472e,
0x474b482b,
0x48e84859,
0x481f47e4,
0x483d48dd,
0x45e34811,
0x46c247da,
0x47fe46d7,
0x482446f7,
0x483f4875,
0x480a4816,
0x49b54964,
0x4930493a,
0x4906490e,
0x485248d3,
0x49c2490a,
0x49444827,
0x493147f5,
0x49564959,
0x48c44932,
0x488d4a2a,
0x48474999,
0x48a149b7,
0x492d47b3,
0x4904482a,
0x498448ee,
0x493f48cd,
0x489c483e,
0x46e948d3,
0x4808472f,
0x46b547a7,
0x488c4774,
0x484b4776,
0x48394772,
0x485c4860,
0x481147bc,
0x4810483f,
0x46aa47d8,
0x477548d0,
0x47c5469a,
0x48e24834,
0x483a47d7,
0x482847a2,
0x48894862,
0x47f8486c,
0x483347de,
0x47884842,
0x48164790,
0x489247b2,
0x477447ec,
0x48854819,
0x4740478c,
0x4851483b,
0x464f47da,
0x45be481e,
0x474746a6,
0x477d474a,
0x47f64864,
0x484748ac,
0x4a144960,
0x4976499a,
0x490d4914,
0x48cc4928,
0x4967488f,
0x498c48d5,
0x49004917,
0x49e54a11,
0x488d496e,
0x496b49fe,
0x4839493a,
0x487e4947,
0x4903489b,
0x491248a1,
0x49324984,
0x49de492c,
0x48c647cb,
0x47f24841,
0x482c4814,
0x46db47e0,
0x48064758,
0x48604812,
0x48154807,
0x487b48e5,
0x47fb47cc,
0x47dd48c7,
0x46b44807,
0x478a48a3,
0x475c46fd,
0x47d44793,
0x47b948df,
0x48cc47f2,
0x48f64864,
0x47c44903,
0x4884484b,
0x47b647e4,
0x48764765,
0x48894810,
0x480447e8,
0x48e54865,
0x480a482b,
0x485c48e3,
0x47804829,
0x47df4838,
0x478346aa,
0x4899485f,
0x48414904,
0x47ff482a,
0x497b48b7,
0x4848494f,
0x4867486f,
0x4807488c,
0x492e4807,
0x48d147b4,
0x4847489a,
0x496a4935,
0x48254895,
0x4855496c,
0x47dc4833,
0x477048fa,
0x488b469c,
0x48cb4827,
0x48af4949,
0x496f487d,
0x48bc4854,
0x479848c9,
0x47ea48b2,
0x461247c9,
0x48ca482e,
0x488546e5,
0x484447d7,
0x48b5484c,
0x47ac486f,
0x484f4884,
0x460b4839,
0x481848a9,
0x47f04691,
0x48394768,
0x484f48a5,
0x480b4818,
0x48bb4897,
0x48314936,
0x495048da,
0x484d489d,
0x4995488b,
0x4929482d,
0x48f647b6,
0x493c48e4,
0x481e48d8,
0x48b04974,
0x46f748d0,
0x48434931,
0x48d947b9,
0x48c5489f,
0x48cd490c,
0x48764903,
0x495c4889,
0x484c48ba,
0x48634844,
0x478a4880,
0x48d74852,
0x48ec484f,
0x48984854,
0x49604964,
0x4852483d,
0x4908492b,
0x471e48c6,
0x465b4888,
0x487c473d,
0x48ef4858,
0x489848b9,
0x49354803,
0x492448d3,
0x489648b5,
0x490448ff,
0x480848cd,
0x4924482e,
0x49344825,
0x489b48a7,
0x48f5499f,
0x486848bc,
0x486849ce,
0x482e48cc,
0x48df49aa,
0x48dc4858,
0x490d4875,
0x496f4955,
0x491f4880,
0x496748b7,
0x48d24977,
0x483b4885,
0x47fb4879,
0x48dd4766,
0x493447b9,
0x46d9481d,
0x49d5482a,
0x48b348c8,
0x483e499e,
0x47334887,
0x474448bb,
0x47ba4816,
0x493248b8,
0x49114939,
0x493248ae,
0x49594905,
0x490a49a6,
0x491f4911,
0x483b48be,
0x498d4829,
0x48f148a3,
0x4841484f,
0x48e54946,
0x486148de,
0x481b499c,
0x47d248dd,
0x48c74986,
0x487e47e1,
0x48c148ec,
0x49324907,
0x48da48a1,
0x48aa4857,
0x483f4882,
0x48614844,
0x470347ef,
0x489e477d,
0x48e046fb,
0x4828481f,
0x491148f7,
0x480c4800,
0x48c44870,
0x47a1487a,
0x46c748bc,
0x4827468f,
0x48a147b1,
0x4862486e,
0x48774856,
0x481d481d,
0x477f47e3,
0x479b483c,
0x45d646e1,
0x484b46ac,
0x48094571,
0x4793464d,
0x48154866,
0x45b146c9,
0x4822489c,
0x467347fc,
0x46c6483a,
0x46bc4557,
0x473d45e9,
0x46e5477c,
0x4795477e,
0x481d487c,
0x48214892,
0x48994847,
0x471847c9,
0x4876474f,
0x4846479c,
0x476d4813,
0x486c48a1,
0x47f0482c,
0x47ca48b3,
0x469c4847,
0x47a548b9,
0x46784620,
0x488747ea,
0x47bc480d,
0x48c247d8,
0x48374858,
0x481f4911,
0x48204897,
0x46d54893,
0x48a14752,
0x48cf46ce,
0x47c5479a,
0x486c481a,
0x47d347e1,
0x47aa48e7,
0x459a480d,
0x47ef487b,
0x481d4574,
0x486947ee,
0x488a4887,
0x470446d5,
0x48fd488a,
0x487c48c5,
0x4917489b,
0x4868489f,
0x491d4832,
0x48c94872,
0x483e4813,
0x48e3491b,
0x48d248f5,
0x47e349a1,
0x47ff4881,
0x47eb48e0,
0x48bb4823,
0x4869484c,
0x48d64925,
0x492748e3,
0x48414839,
0x48584869,
0x4841489d,
0x46c947cd,
0x489c4720,
0x48a146b1,
0x47844717,
0x48594822,
0x47c9481c,
0x47a848c5,
0x46744837,
0x477148bd,
0x46d847ee,
0x4825484e,
0x48bf485e,
0x48154878,
0x48de488d,
0x480c488d,
0x489b47c7,
0x47724795,
0x48f34803,
0x48a5486b,
0x47d9475d,
0x489d489c,
0x485b486a,
0x4820495d,
0x46f14837,
0x46954893,
0x486847ac,
0x482e4737,
0x48a3486c,
0x48ab48db,
0x48654862,
0x481a48d6,
0x481c474f,
0x47fd48b9,
0x48a54639,
0x48814787,
0x47984610,
0x48574842,
0x4793485f,
0x47d448f8,
0x45c5478d,
0x4641485a,
0x47a04726,
0x4727470b,
0x483a48b2,
0x48194840,
0x48d6487d,
0x483148c1,
0x478d4860,
0x46cb4801,
0x48b1482f,
0x487f4720,
0x484747dc,
0x48884835,
0x47114810,
0x4823488a,
0x466748a4,
0x477248af,
0x47ff45ad,
0x489947c6,
0x4816484a,
0x485447ce,
0x489d47bd,
0x478948c1,
0x46f0483f,
0x47ca4845,
0x4841473b,
0x489b4598,
0x481a4726,
0x48a2488c,
0x4772475d,
0x482648e8,
0x4606485d,
0x4711485c,
0x480246c0,
0x489846c6,
0x48d1489e,
0x47684813,
0x48d84853,
0x47184899,
0x482a4760,
0x47fc4838,
0x484e4712,
0x48c847ab,
0x480d4780,
0x48004922,
0x48414798,
0x47694903,
0x475847c8,
0x4710487b,
0x47f947e8,
0x470c4718,
0x488548bf,
0x488f483f,
0x4872488b,
0x477a48a9,
0x48604872,
0x46384829,
0x484d4809,
0x486646f7,
0x484c46d3,
0x482248a4,
0x478c4854,
0x483748c4,
0x47014892,
0x483948d7,
0x4835480d,
0x48874704,
0x48d24855,
0x48414845,
0x47f9476f,
0x46984843,
0x48274754,
0x46ae47da,
0x4813467a,
0x483346bd,
0x47154686,
0x482747c3,
0x480346ac,
0x4734481f,
0x45e047aa,
0x467d4847,
0x473746ca,
0x47b247e9,
0x48154807,
0x479047f8,
};
  /* Header file generated by RedMulE Golden Model */
  #ifndef __TENSOR_DIM__
  #define __TENSOR_DIM__

  #define M_SIZE  32
  #define N_SIZE  32
  #define K_SIZE  32
  #define SRC_FMT FP16
  #define DST_FMT FP16
  #define FPFORMAT 16
  uint8_t gemm_ops = GEMM;

  #endif
   /* Header file generated by RedMulE Golden Model */

uint16_t w_inp [1024] __attribute__ ((aligned(64))) = {
0x39ea, 0x37d6, 0x3b1c, 0x3b7d, 0x3b92, 0x3631, 0x3519, 0x37a5, 0x317c, 0x3bc6, 0x398c, 0x2ece, 0x3462, 0x3a68, 0x3bc9, 0x3724, 0x3a73, 0x2d85, 0x3b36, 0x3afc, 0x39b6, 0x374c, 0x34f9, 0x3895, 0x281b, 0x35c3, 0x38d7, 0x2ef6, 0x3985, 0x301f, 0x16f0, 0x39e5,
0x3600, 0x3a98, 0x3430, 0x2f4d, 0x35f1, 0x3a73, 0x39d3, 0x2f56, 0x3ae6, 0x33ba, 0x3a96, 0x327f, 0x35e9, 0x3987, 0x3310, 0x3157, 0x37d8, 0x33a1, 0x3859, 0x358f, 0x2fda, 0x3811, 0x3a05, 0x38a8, 0x3a58, 0x38a4, 0x3480, 0x34ca, 0x3b02, 0x363c, 0x3ade, 0x3afc,
0x30e5, 0x2eaa, 0x35a6, 0x3822, 0x36f6, 0x3aee, 0x38b1, 0x3993, 0x3465, 0x3051, 0x2e30, 0x39c5, 0x3078, 0x3a97, 0x37d0, 0x390a, 0x29af, 0x2256, 0x39de, 0x3b5b, 0x396b, 0x3a9a, 0x3a20, 0x3b1e, 0x348c, 0x2fd0, 0x332c, 0x3bb4, 0x2f86, 0x3745, 0x38b0, 0x3627,
0x3a0a, 0x36e5, 0x3925, 0x37fa, 0x35c7, 0x2fd3, 0x3378, 0x2da2, 0x3ad6, 0x386b, 0x2519, 0x3a5c, 0x3966, 0x3bd9, 0x3a7a, 0x35e5, 0x2b47, 0x30e1, 0x241c, 0x3a51, 0x39c7, 0x34d2, 0x3927, 0x349b, 0x365d, 0x3b36, 0x33ac, 0x3958, 0x384d, 0x3b77, 0x3320, 0x2f48,
0x327f, 0x3729, 0x2101, 0x38b7, 0x3b33, 0x3b12, 0x2abd, 0x334d, 0x3b2b, 0x3b6c, 0x3726, 0x35b0, 0x2cec, 0x3903, 0x39f8, 0x389a, 0x3909, 0x348a, 0x38e6, 0x2b71, 0x3845, 0x3b8b, 0x3bbe, 0x3aae, 0x3532, 0x3bb3, 0x2981, 0x3130, 0x38d0, 0x3958, 0x3968, 0x37b3,
0x38a4, 0x35dc, 0x3ac2, 0x2b6b, 0x3986, 0x3a2c, 0x34b1, 0x2c10, 0x3a91, 0x385e, 0x3897, 0x39d0, 0x323b, 0x362f, 0x3468, 0x2ba1, 0x321b, 0x34de, 0x33a9, 0x2cce, 0x3a8a, 0x2d04, 0x39e0, 0x3bfb, 0x37b0, 0x39a1, 0x3a9f, 0x3bc2, 0x2d13, 0x2ecb, 0x38ec, 0x2852,
0x3a82, 0x3ba1, 0x391d, 0x325f, 0x38d6, 0x39e9, 0x3492, 0x3811, 0x384f, 0x39fb, 0x3946, 0x3895, 0x378b, 0x34fc, 0x38bd, 0x3b19, 0x3bcd, 0x3b09, 0x30af, 0x3b66, 0x3a56, 0x34f2, 0x2663, 0x3157, 0x332b, 0x34d6, 0x3693, 0x3b37, 0x2604, 0x2f25, 0x2ae9, 0x3b05,
0x3553, 0x3955, 0x3842, 0x39e8, 0x380e, 0x2901, 0x2690, 0x30c4, 0x3b20, 0x36c2, 0x365a, 0x3a54, 0x39db, 0x3b32, 0x2be8, 0x3bce, 0x3b76, 0x399f, 0x38ac, 0x310d, 0x3a63, 0x388e, 0x3986, 0x3a51, 0x3a80, 0x3484, 0x2f41, 0x39cd, 0x36b0, 0x3b16, 0x39e5, 0x36cb,
0x3159, 0x36a1, 0x2eab, 0x3be0, 0x3bd1, 0x2c78, 0x3be5, 0x390a, 0x3a2e, 0x389d, 0x3591, 0x367d, 0x3b49, 0x3822, 0x383e, 0x3947, 0x342a, 0x2f8e, 0x39d8, 0x3788, 0x3065, 0x3571, 0x3ac7, 0x3905, 0x3137, 0x38ea, 0x3aaa, 0x393a, 0x3a5f, 0x3aa9, 0x35c2, 0x387d,
0x356c, 0x346f, 0x2dd4, 0x3ae9, 0x356a, 0x3b43, 0x241c, 0x3b9a, 0x38a5, 0x3b23, 0x3bee, 0x3569, 0x3220, 0x3aa6, 0x39bc, 0x2c70, 0x3a32, 0x39fe, 0x3bb3, 0x352f, 0x3b77, 0x3ac4, 0x3391, 0x36a8, 0x37d2, 0x37cd, 0x3957, 0x2836, 0x32a2, 0x3a35, 0x36aa, 0x3526,
0x3956, 0x3440, 0x3b5d, 0x3b6e, 0x3a98, 0x3188, 0x37b4, 0x2c40, 0x2ece, 0x3a6c, 0x3500, 0x2f4a, 0x2baa, 0x2539, 0x3693, 0x3964, 0x3925, 0x381d, 0x3a12, 0x373e, 0x2659, 0x3290, 0x32d2, 0x3500, 0x38b6, 0x338c, 0x3821, 0x321c, 0x2e8a, 0x39cc, 0x399c, 0x3862,
0x384f, 0x3962, 0x3bed, 0x3887, 0x334d, 0x347e, 0x396c, 0x2f6c, 0x314d, 0x3611, 0x35c0, 0x344a, 0x3395, 0x3989, 0x3a46, 0x3839, 0x3b3c, 0x376a, 0x34c8, 0x3754, 0x3996, 0x2c5e, 0x3be7, 0x2e05, 0x3165, 0x3a3a, 0x373f, 0x38f0, 0x36c1, 0x3b4f, 0x34ca, 0x38ae,
0x3a3d, 0x35ab, 0x35db, 0x3a42, 0x3b30, 0x39e4, 0x3ab6, 0x3085, 0x2c69, 0x389a, 0x3006, 0x3aae, 0x2f85, 0x2d5e, 0x243b, 0x3ac3, 0x38f5, 0x37c7, 0x3979, 0x34c0, 0x3b35, 0x29fe, 0x30d7, 0x2ebf, 0x39a6, 0x332f, 0x38dd, 0x2b31, 0x3a09, 0x36e9, 0x3b2d, 0x397b,
0x3849, 0x3050, 0x3b3b, 0x387c, 0x3736, 0x30c0, 0x3aa1, 0x3bed, 0x2c7b, 0x3768, 0x3935, 0x38d9, 0x3180, 0x2e6c, 0x3370, 0x39dc, 0x3550, 0x3a67, 0x386d, 0x35fa, 0x2c91, 0x3488, 0x38bc, 0x2cda, 0x2cd9, 0x1ecc, 0x3b57, 0x3a8e, 0x3aaf, 0x3b92, 0x3435, 0x349f,
0x39f3, 0x37bf, 0x34fb, 0x3902, 0x3437, 0x33cb, 0x308f, 0x30ec, 0x3b1b, 0x3a3c, 0x3b27, 0x2d2a, 0x395e, 0x35ea, 0x3bbe, 0x3852, 0x38d6, 0x34ce, 0x32f2, 0x3767, 0x3bb8, 0x3a3e, 0x371a, 0x35e0, 0x34ff, 0x3931, 0x2e96, 0x396d, 0x29c4, 0x34f9, 0x3730, 0x3b9b,
0x3ad6, 0x38f9, 0x38e3, 0x3be8, 0x34be, 0x382d, 0x3844, 0x3aa5, 0x3b84, 0x3bd5, 0x36a0, 0x37b8, 0x3907, 0x3433, 0x3485, 0x3908, 0x37e9, 0x391f, 0x3bc0, 0x3776, 0x3421, 0x2e45, 0x3aaf, 0x3508, 0x3123, 0x3b98, 0x38db, 0x392a, 0x3ab8, 0x369d, 0x3aca, 0x382b,
0x3718, 0x3b04, 0x3ae5, 0x347e, 0x3434, 0x2c25, 0x1c19, 0x3b6f, 0x31bc, 0x3754, 0x33ab, 0x38fa, 0x3977, 0x30cb, 0x395d, 0x398d, 0x2116, 0x34de, 0x3b2a, 0x2081, 0x39ce, 0x3a28, 0x30c3, 0x34d7, 0x37e1, 0x38a2, 0x38fc, 0x3a48, 0x3900, 0x376a, 0x385b, 0x396b,
0x3781, 0x38f1, 0x3a01, 0x37aa, 0x3056, 0x2647, 0x39fe, 0x3978, 0x3453, 0x3286, 0x2e02, 0x3919, 0x34ff, 0x3aea, 0x397c, 0x3b57, 0x38d1, 0x384c, 0x386a, 0x3b5f, 0x3bf6, 0x3564, 0x3a02, 0x2277, 0x3955, 0x2450, 0x273e, 0x211d, 0x3bff, 0x372e, 0x3ab8, 0x386d,
0x38c3, 0x3910, 0x34b2, 0x3b49, 0x28b2, 0x3be3, 0x3bee, 0x379f, 0x347e, 0x3504, 0x3b80, 0x3869, 0x3b3c, 0x34fd, 0x3bad, 0x362c, 0x36f7, 0x3928, 0x35b2, 0x3258, 0x393f, 0x3362, 0x3ac0, 0x35d6, 0x396e, 0x3546, 0x1f57, 0x344f, 0x3adf, 0x3977, 0x3a65, 0x3baf,
0x3b4d, 0x3af9, 0x3b90, 0x368a, 0x2cfd, 0x3096, 0x358c, 0x3853, 0x3679, 0x36a0, 0x3706, 0x36c3, 0x3b92, 0x3a35, 0x39c7, 0x30f6, 0x3077, 0x3bd5, 0x382e, 0x3a5c, 0x362b, 0x380d, 0x3bb5, 0x3676, 0x1a11, 0x30bd, 0x3737, 0x370b, 0x38d2, 0x2c2e, 0x2c58, 0x33dd,
0x353e, 0x38dd, 0x381c, 0x352c, 0x3ad8, 0x3969, 0x3b6f, 0x3b17, 0x3acb, 0x39bb, 0x3923, 0x3ac1, 0x3448, 0x3932, 0x3ab0, 0x397c, 0x355d, 0x3bf1, 0x3000, 0x3713, 0x3764, 0x393a, 0x343d, 0x31a2, 0x3807, 0x3913, 0x39c2, 0x3107, 0x3b48, 0x3a4e, 0x39be, 0x3445,
0x2db9, 0x3b6a, 0x39c3, 0x24bc, 0x38d6, 0x376f, 0x3903, 0x3966, 0x35b7, 0x3721, 0x3bfc, 0x38c6, 0x3ad3, 0x310e, 0x377a, 0x3ba2, 0x330b, 0x3637, 0x3885, 0x39da, 0x353e, 0x3884, 0x2f89, 0x2e35, 0x3352, 0x3a1f, 0x3b4d, 0x3934, 0x3bc2, 0x2376, 0x3951, 0x391d,
0x3832, 0x32ea, 0x398d, 0x3426, 0x3987, 0x35e1, 0x3440, 0x3261, 0x31c9, 0x32f0, 0x250f, 0x38a4, 0x3a65, 0x3840, 0x38bd, 0x3a90, 0x38f8, 0x35cf, 0x2c0d, 0x37e0, 0x3384, 0x3428, 0x3995, 0x394b, 0x3b5f, 0x2cdd, 0x3b72, 0x3793, 0x298c, 0x3871, 0x3a8c, 0x3b09,
0x3735, 0x3aed, 0x3352, 0x1556, 0x3486, 0x3bdc, 0x36d0, 0x2a99, 0x3886, 0x35ce, 0x30b4, 0x38a7, 0x3997, 0x3afe, 0x3b28, 0x314c, 0x3947, 0x387e, 0x37f6, 0x3a6c, 0x2c75, 0x2c5b, 0x3528, 0x38b4, 0x3970, 0x39b2, 0x2d84, 0x35ec, 0x33af, 0x37ba, 0x37f7, 0x3b8c,
0x3442, 0x38a2, 0x367f, 0x3aa1, 0x3243, 0x39d1, 0x368b, 0x2520, 0x31c0, 0x3764, 0x3b29, 0x3b5f, 0x3544, 0x3480, 0x38b0, 0x397e, 0x2ca9, 0x399a, 0x3b43, 0x350f, 0x2f4b, 0x3a15, 0x36e3, 0x215d, 0x3b96, 0x34f0, 0x350e, 0x3a8b, 0x3984, 0x3a00, 0x340d, 0x3a45,
0x3b8c, 0x3b69, 0x3317, 0x3ae0, 0x3bc8, 0x340f, 0x340a, 0x376b, 0x3883, 0x3658, 0x2d77, 0x3b77, 0x3942, 0x2d15, 0x34d1, 0x3bdb, 0x3b68, 0x33ca, 0x3a8f, 0x39cf, 0x3911, 0x3a1c, 0x364b, 0x3af4, 0x3524, 0x34c8, 0x37fe, 0x39de, 0x3beb, 0x349a, 0x366e, 0x3a93,
0x203d, 0x377e, 0x30ef, 0x3093, 0x3b4e, 0x3b87, 0x32e3, 0x34c2, 0x396c, 0x2d52, 0x3995, 0x35d7, 0x37b4, 0x3563, 0x399a, 0x35d2, 0x35c7, 0x393d, 0x3abf, 0x29ce, 0x3a89, 0x38ba, 0x3b58, 0x3b58, 0x3a92, 0x3420, 0x3b99, 0x2cd4, 0x39b2, 0x3b70, 0x37fe, 0x3640,
0x3ab5, 0x3994, 0x3b2f, 0x37e7, 0x39ec, 0x3b0f, 0x3312, 0x2f09, 0x35b6, 0x3b3a, 0x3a57, 0x3b7e, 0x3066, 0x2f8f, 0x3022, 0x3abc, 0x38b7, 0x3395, 0x3b27, 0x3935, 0x39b1, 0x22c4, 0x2c86, 0x32d0, 0x3338, 0x350c, 0x36d0, 0x3a62, 0x379a, 0x3052, 0x3b24, 0x31d1,
0x3a77, 0x3919, 0x3b15, 0x2daa, 0x39bc, 0x3939, 0x3bdb, 0x395b, 0x2d32, 0x3991, 0x282d, 0x3ba0, 0x285d, 0x35bd, 0x3937, 0x2427, 0x3b7b, 0x38ae, 0x3a1e, 0x2c1f, 0x3267, 0x2a48, 0x3a14, 0x3ac5, 0x3964, 0x3a61, 0x2160, 0x3813, 0x37aa, 0x397c, 0x3822, 0x3153,
0x287e, 0x3ad8, 0x2f9c, 0x2ba3, 0x3add, 0x3645, 0x39a7, 0x339f, 0x389b, 0x3943, 0x320b, 0x30f4, 0x369e, 0x343d, 0x38bd, 0x3adc, 0x2f20, 0x331e, 0x3a8b, 0x3af6, 0x3a32, 0x361d, 0x3889, 0x38e7, 0x2e31, 0x3862, 0x38f3, 0x3a39, 0x395d, 0x3ab2, 0x2d7b, 0x2af5,
0x38cf, 0x33ac, 0x3986, 0x33cf, 0x2f8e, 0x39c9, 0x3adb, 0x319c, 0x3060, 0x390e, 0x1d59, 0x32e1, 0x39ed, 0x37c5, 0x3041, 0x35be, 0x39ed, 0x39da, 0x37f4, 0x3324, 0x2cc4, 0x299f, 0x3891, 0x390b, 0x3392, 0x3a6c, 0x38e3, 0x3966, 0x3976, 0x392c, 0x25d8, 0x370e,
0x3bb1, 0x352d, 0x3a45, 0x3954, 0x2f06, 0x3734, 0x38a2, 0x393e, 0x2e48, 0x3b11, 0x365b, 0x3b64, 0x3401, 0x3798, 0x38fa, 0x35dc, 0x3884, 0x3229, 0x3bf1, 0x3890, 0x384d, 0x315b, 0x3a77, 0x3417, 0x28f8, 0x38b8, 0x3076, 0x3890, 0x36bf, 0x372d, 0x391b, 0x380c
};

  uint16_t x_inp [1024] __attribute__ ((aligned(64))) = {
0x36d7, 0x3609, 0x3a20, 0x3561, 0x3319, 0x3ba0, 0x3a00, 0x3665, 0x2d45, 0x35f4, 0x3a58, 0x3a52, 0x3778, 0x357a, 0x3bb2, 0x3a7e, 0x392c, 0x2de3, 0x39b1, 0x3236, 0x37b5, 0x34fd, 0x378f, 0x34ac, 0x3b32, 0x380b, 0x387b, 0x3964, 0x3bea, 0x3b8a, 0x3bb2, 0x3999,
0x3af2, 0x3461, 0x3a3f, 0x3b68, 0x39d0, 0x3a61, 0x39e4, 0x38ac, 0x3733, 0x38ff, 0x3960, 0x3af1, 0x30d3, 0x3bb5, 0x334c, 0x37a3, 0x33ad, 0x3b73, 0x3845, 0x337e, 0x377e, 0x311d, 0x3adc, 0x2a37, 0x3239, 0x32cf, 0x39fb, 0x3a19, 0x3b57, 0x3501, 0x38a9, 0x3454,
0x3baa, 0x3782, 0x308b, 0x381c, 0x3498, 0x3118, 0x3a9c, 0x3b63, 0x3b3b, 0x3849, 0x3844, 0x36cc, 0x3a87, 0x3100, 0x3b90, 0x35c2, 0x3a90, 0x3132, 0x383d, 0x214b, 0x3217, 0x3526, 0x386a, 0x3042, 0x3b5e, 0x38ff, 0x2ac3, 0x35bd, 0x2bb2, 0x2e03, 0x3833, 0x3408,
0x2542, 0x3984, 0x3bc1, 0x36c7, 0x36dd, 0x2479, 0x36e0, 0x39f8, 0x3bb6, 0x3bf3, 0x39b0, 0x2edd, 0x3427, 0x3aad, 0x3366, 0x35ff, 0x2e3c, 0x3aaf, 0x3a0e, 0x384e, 0x2c1b, 0x3a5f, 0x39d4, 0x38df, 0x3862, 0x2f7c, 0x34a6, 0x3645, 0x22e7, 0x3822, 0x31bb, 0x3a06,
0x2e79, 0x3051, 0x378f, 0x39a7, 0x3bec, 0x3954, 0x3b18, 0x3a8c, 0x37ed, 0x3b8e, 0x3030, 0x3aee, 0x39a4, 0x3ab0, 0x3b3d, 0x3851, 0x39e7, 0x33e9, 0x363c, 0x2aaa, 0x2d87, 0x38a7, 0x3774, 0x37fe, 0x3124, 0x3ba0, 0x364d, 0x2d55, 0x3974, 0x38f7, 0x38e6, 0x3906,
0x398e, 0x2f22, 0x3a4a, 0x3be7, 0x24f7, 0x27c8, 0x3af1, 0x36f6, 0x2de8, 0x3593, 0x3b36, 0x2892, 0x3a20, 0x28b8, 0x129e, 0x3b88, 0x3b49, 0x364f, 0x3b9a, 0x3813, 0x345e, 0x3b93, 0x3502, 0x286e, 0x38cf, 0x3519, 0x349c, 0x30e9, 0x38b7, 0x38ab, 0x3a48, 0x33b0,
0x3a66, 0x397e, 0x38db, 0x31de, 0x3b14, 0x3a07, 0x3b55, 0x3a06, 0x39ee, 0x3b75, 0x34a8, 0x39e2, 0x3bf8, 0x316a, 0x3ada, 0x3b81, 0x3abc, 0x3983, 0x3168, 0x36c0, 0x37e3, 0x2d60, 0x34f1, 0x3a1b, 0x36a8, 0x3005, 0x3060, 0x2dd3, 0x3957, 0x3b6d, 0x38c1, 0x3bce,
0x2786, 0x3b83, 0x3b3a, 0x3bd5, 0x38f3, 0x3991, 0x3b70, 0x2c01, 0x3367, 0x3b23, 0x390d, 0x3b9a, 0x2c39, 0x3b25, 0x280b, 0x36c8, 0x398c, 0x3592, 0x1f3d, 0x3a01, 0x2560, 0x388c, 0x392b, 0x3857, 0x363b, 0x33fa, 0x33fa, 0x30c3, 0x3150, 0x30a6, 0x3b82, 0x35c0,
0x3406, 0x3ae6, 0x39e7, 0x391f, 0x307e, 0x2f19, 0x38d2, 0x284b, 0x3883, 0x3716, 0x35a5, 0x362d, 0x39ca, 0x365d, 0x36c5, 0x3aff, 0x3408, 0x3b05, 0x3925, 0x3844, 0x3ab4, 0x395e, 0x3ace, 0x36c5, 0x2f5a, 0x2b46, 0x30fa, 0x3ad5, 0x30ea, 0x1a79, 0x3621, 0x3667,
0x375f, 0x3a6e, 0x37a4, 0x38ce, 0x3406, 0x228e, 0x3829, 0x2c97, 0x3be2, 0x3bec, 0x3a10, 0x3b1e, 0x38da, 0x3365, 0x3a5d, 0x3adb, 0x3ba2, 0x3998, 0x388b, 0x3aab, 0x39ec, 0x3b48, 0x3b19, 0x3ba2, 0x3609, 0x3bbd, 0x34ae, 0x393d, 0x393a, 0x3634, 0x29fc, 0x3412,
0x3850, 0x385e, 0x2c41, 0x313d, 0x3b2e, 0x3827, 0x37cb, 0x35b0, 0x3844, 0x34fd, 0x327a, 0x3224, 0x34db, 0x373b, 0x34fc, 0x2bf8, 0x38cb, 0x3946, 0x39e5, 0x3b5e, 0x340f, 0x3b5e, 0x3b83, 0x3ac0, 0x39e4, 0x35cc, 0x38b2, 0x35be, 0x3264, 0x35f8, 0x38df, 0x3645,
0x3b48, 0x3a12, 0x3a93, 0x35a0, 0x29f0, 0x3898, 0x3581, 0x31ad, 0x34af, 0x3937, 0x354f, 0x288c, 0x22d2, 0x341f, 0x3282, 0x2f02, 0x363e, 0x39c7, 0x3529, 0x3a39, 0x393c, 0x3bdd, 0x3a82, 0x3086, 0x396d, 0x39b0, 0x3889, 0x3b0c, 0x37b2, 0x396e, 0x3b95, 0x3090,
0x39c5, 0x37ba, 0x378c, 0x379b, 0x398f, 0x1bcc, 0x36f1, 0x2e1a, 0x397a, 0x31cc, 0x3741, 0x39e5, 0x373f, 0x3be5, 0x39c1, 0x3637, 0x3bb0, 0x3858, 0x3803, 0x3a9a, 0x3853, 0x3bfc, 0x389e, 0x3933, 0x352e, 0x3b7f, 0x3094, 0x2ee6, 0x38ea, 0x35df, 0x3bdd, 0x348e,
0x39fe, 0x36a1, 0x32ac, 0x39b8, 0x392c, 0x39b5, 0x37b4, 0x3bd9, 0x39fb, 0x3556, 0x35ee, 0x3453, 0x3767, 0x3776, 0x343e, 0x353f, 0x2c22, 0x3a87, 0x34d9, 0x35dc, 0x3814, 0x3ab5, 0x3596, 0x38dd, 0x326c, 0x369f, 0x3435, 0x3a33, 0x3834, 0x3a0b, 0x3920, 0x2cf3,
0x3a94, 0x39cc, 0x3ae9, 0x378a, 0x37e0, 0x39cf, 0x34b7, 0x35d3, 0x3887, 0x3938, 0x367e, 0x3681, 0x34e4, 0x3381, 0x366a, 0x3be4, 0x384d, 0x3a8a, 0x2d48, 0x2c9a, 0x3aef, 0x3922, 0x3b6c, 0x377e, 0x328f, 0x2c0a, 0x3ab1, 0x3a2f, 0x373f, 0x3981, 0x3bb0, 0x39b7,
0x3949, 0x3995, 0x3521, 0x38f0, 0x2592, 0x2ee2, 0x3bbc, 0x37ba, 0x39ff, 0x38c4, 0x2ff3, 0x3afa, 0x3a1e, 0x3725, 0x3a4c, 0x3acc, 0x3955, 0x3429, 0x1e8b, 0x3bfb, 0x3b1f, 0x3af5, 0x39bf, 0x3b3c, 0x3b33, 0x20c1, 0x2be4, 0x2ba4, 0x3587, 0x3b2c, 0x2ade, 0x3490,
0x3b52, 0x3880, 0x3aae, 0x31fa, 0x37db, 0x38a7, 0x31a5, 0x3b1e, 0x383d, 0x391e, 0x342c, 0x38e6, 0x341f, 0x31f8, 0x36d4, 0x32ff, 0x39f9, 0x2831, 0x3b3c, 0x35d8, 0x362d, 0x3554, 0x3a50, 0x3a67, 0x3ac4, 0x3a42, 0x3ac8, 0x2e68, 0x3942, 0x3b82, 0x3b8f, 0x3b8f,
0x323e, 0x3754, 0x36c1, 0x30b9, 0x2d5e, 0x387a, 0x39c6, 0x3b9e, 0x38d3, 0x2dd2, 0x3aec, 0x39f2, 0x3b2a, 0x3bb8, 0x30c8, 0x3aae, 0x3989, 0x3b07, 0x3812, 0x35d3, 0x3338, 0x3b5c, 0x3556, 0x32cc, 0x3ae5, 0x3b54, 0x38ae, 0x382f, 0x382f, 0x33ff, 0x35a8, 0x3629,
0x3932, 0x3b80, 0x378d, 0x2cb5, 0x3b57, 0x3a47, 0x388d, 0x3591, 0x3b1b, 0x3a65, 0x3af6, 0x3b46, 0x207c, 0x3890, 0x2c4e, 0x37b2, 0x3acc, 0x33a6, 0x3ab8, 0x3bdb, 0x3716, 0x3645, 0x39fa, 0x3013, 0x353a, 0x3844, 0x3656, 0x3b19, 0x3ab0, 0x367c, 0x3903, 0x2f98,
0x3533, 0x350d, 0x3b7a, 0x3bd3, 0x3452, 0x33fd, 0x3841, 0x32de, 0x326a, 0x38d3, 0x35de, 0x3823, 0x35d5, 0x3126, 0x3617, 0x37a6, 0x3497, 0x3822, 0x3741, 0x3b57, 0x3bad, 0x3aa5, 0x3be5, 0x34e1, 0x3803, 0x38e0, 0x342e, 0x38de, 0x3474, 0x3885, 0x376d, 0x34c1,
0x38fa, 0x32a9, 0x3b81, 0x3a13, 0x3b53, 0x1d90, 0x3879, 0x2bf6, 0x36d9, 0x32f2, 0x37c5, 0x284e, 0x38f4, 0x2c09, 0x288f, 0x30b2, 0x3655, 0x33e6, 0x37c1, 0x3a33, 0x3391, 0x356c, 0x31c0, 0x38ef, 0x2cde, 0x386c, 0x357a, 0x3921, 0x392c, 0x39dd, 0x338a, 0x3bb0,
0x39bb, 0x2c7d, 0x3bcf, 0x284e, 0x3652, 0x36f0, 0x3a23, 0x364e, 0x3aa4, 0x37c5, 0x2f44, 0x2e1d, 0x34de, 0x3a15, 0x3826, 0x3477, 0x382d, 0x2d0f, 0x397a, 0x3b20, 0x2a71, 0x371e, 0x3bdc, 0x3996, 0x37b8, 0x3653, 0x3a3e, 0x3a19, 0x2bc9, 0x2d86, 0x3a71, 0x3855,
0x3a53, 0x32bf, 0x1a50, 0x3a18, 0x37f8, 0x3afc, 0x3145, 0x3551, 0x3bcd, 0x37d5, 0x1180, 0x3a60, 0x3940, 0x39fd, 0x337b, 0x191a, 0x334c, 0x2989, 0x34fd, 0x3ac0, 0x397d, 0x3733, 0x3437, 0x2986, 0x330e, 0x373d, 0x312c, 0x3bfe, 0x3b9b, 0x39a8, 0x3b2c, 0x3692,
0x3894, 0x3aad, 0x34da, 0x333d, 0x3b18, 0x3263, 0x3bc6, 0x34f5, 0x39de, 0x3a86, 0x3a8d, 0x3509, 0x3967, 0x38da, 0x328c, 0x372f, 0x3b3c, 0x33d8, 0x3ae6, 0x3199, 0x398b, 0x3acf, 0x3333, 0x382a, 0x3912, 0x2f36, 0x39af, 0x34a0, 0x3937, 0x2cba, 0x3b22, 0x3925,
0x3714, 0x2fd6, 0x38bf, 0x3982, 0x3927, 0x3b81, 0x2d84, 0x385a, 0x28b5, 0x392c, 0x3a99, 0x313a, 0x3bf3, 0x3a7b, 0x2c7b, 0x3414, 0x304f, 0x3537, 0x3968, 0x38e9, 0x3a64, 0x32f7, 0x3b9c, 0x37f4, 0x36d2, 0x335b, 0x36dd, 0x38b4, 0x3617, 0x3aa6, 0x3456, 0x3444,
0x28d4, 0x35ed, 0x284c, 0x24e0, 0x3564, 0x3548, 0x3887, 0x3935, 0x34df, 0x3bab, 0x398a, 0x3a10, 0x3390, 0x349d, 0x36d5, 0x3a89, 0x3a88, 0x388b, 0x3844, 0x3504, 0x39aa, 0x3777, 0x36c3, 0x3b91, 0x3ba1, 0x3010, 0x37b6, 0x3aa9, 0x34ed, 0x397a, 0x3289, 0x3b0d,
0x3a7f, 0x3b0b, 0x3a7f, 0x3370, 0x21b6, 0x3181, 0x2b00, 0x27a4, 0x2bcc, 0x3a63, 0x39ae, 0x3a56, 0x38c7, 0x3a3e, 0x3590, 0x3628, 0x34e0, 0x3b06, 0x36ee, 0x2dd0, 0x3832, 0x39ed, 0x31f9, 0x3963, 0x3456, 0x35f7, 0x25ed, 0x33d7, 0x3b76, 0x32c7, 0x396f, 0x3abe,
0x3ac4, 0x36a0, 0x3754, 0x387b, 0x349c, 0x3a66, 0x38b9, 0x3b3c, 0x3b77, 0x37bf, 0x2e60, 0x38ff, 0x34fd, 0x383e, 0x379a, 0x3719, 0x349c, 0x38f5, 0x245f, 0x37d3, 0x31f3, 0x3a67, 0x31f0, 0x3706, 0x3049, 0x3b81, 0x2d5d, 0x3247, 0x3727, 0x3782, 0x35de, 0x396b,
0x2495, 0x3421, 0x397f, 0x3afe, 0x32d7, 0x370e, 0x316d, 0x395a, 0x39e2, 0x2fc9, 0x3869, 0x39fd, 0x307e, 0x3959, 0x349c, 0x3943, 0x3b4e, 0x3b03, 0x2b40, 0x38df, 0x39a9, 0x3790, 0x3090, 0x3844, 0x3385, 0x36dd, 0x2fdb, 0x385d, 0x3abc, 0x3ad4, 0x30f5, 0x33a3,
0x3101, 0x3498, 0x34bc, 0x35d6, 0x37bf, 0x36fd, 0x3634, 0x2582, 0x397b, 0x388a, 0x3642, 0x2dd1, 0x3448, 0x2b72, 0x3520, 0x302e, 0x3a11, 0x3bd8, 0x3904, 0x3ac9, 0x3afd, 0x3a07, 0x384d, 0x39c7, 0x3afa, 0x2f6d, 0x3b2f, 0x33bf, 0x3b09, 0x281d, 0x3562, 0x3b68,
0x3151, 0x3a30, 0x3a77, 0x3bd0, 0x1ae9, 0x3afa, 0x37b8, 0x35b5, 0x3196, 0x3ab2, 0x3aa8, 0x2faf, 0x35a9, 0x3765, 0x3923, 0x3709, 0x3628, 0x3a9f, 0x384c, 0x356d, 0x3269, 0x2f12, 0x37af, 0x3a88, 0x3620, 0x364d, 0x37bd, 0x3812, 0x3ba2, 0x3b15, 0x34ed, 0x2c97,
0x2e51, 0x34e0, 0x3922, 0x3626, 0x3224, 0x3a2d, 0x3729, 0x3878, 0x3308, 0x3b00, 0x31f6, 0x2f4a, 0x389f, 0x38b3, 0x2ebf, 0x1abf, 0x3350, 0x3903, 0x384d, 0x39c7, 0x36e1, 0x3bb9, 0x3902, 0x384c, 0x3815, 0x31b1, 0x351c, 0x3638, 0x391c, 0x3a6c, 0x3794, 0x30ec
};
  uint16_t y_inp [1024] __attribute__ ((aligned(64))) = {
0x300b, 0x343d, 0x348d, 0x3acd, 0x2c8b, 0x3ac7, 0x3070, 0x3700, 0x393f, 0x3762, 0x3b5b, 0x3625, 0x3949, 0x3916, 0x2c93, 0x3a70, 0x36d0, 0x3bff, 0x3675, 0x3a7a, 0x101b, 0x39ce, 0x394c, 0x31ec, 0x2fc6, 0x319b, 0x3910, 0x384b, 0x3abf, 0x3a08, 0x3bda, 0x3a4c,
0x35e7, 0x38b8, 0x3b73, 0x238b, 0x33b8, 0x309c, 0x32ac, 0x3ac3, 0x33f8, 0x34b8, 0x302c, 0x2fa5, 0x3482, 0x2d32, 0x2e7d, 0x3ac3, 0x27ea, 0x35ef, 0x38da, 0x3ac6, 0x3a19, 0x3923, 0x3a8d, 0x36a8, 0x3977, 0x38ab, 0x2df4, 0x3970, 0x344f, 0x3199, 0x37db, 0x33b2,
0x3406, 0x39e6, 0x3a21, 0x3528, 0x26dc, 0x39c4, 0x3495, 0x35c6, 0x385b, 0x1e18, 0x3aa5, 0x3979, 0x375f, 0x3848, 0x3b02, 0x3a5f, 0x3901, 0x3868, 0x3949, 0x2190, 0x3b23, 0x38ef, 0x3a5d, 0x36f9, 0x3abd, 0x3077, 0x3985, 0x3aae, 0x3809, 0x3b53, 0x2d8c, 0x3bc9,
0x38cc, 0x3763, 0x3934, 0x3bff, 0x3af4, 0x3748, 0x398f, 0x3a05, 0x3a3e, 0x3842, 0x3835, 0x3b6d, 0x374d, 0x38ad, 0x3b29, 0x3a60, 0x303f, 0x3644, 0x3bc5, 0x3afa, 0x378e, 0x2e5e, 0x3836, 0x36d7, 0x3627, 0x3a09, 0x3be1, 0x391b, 0x3b6e, 0x375e, 0x33f4, 0x3b78,
0x3708, 0x3b24, 0x3255, 0x3021, 0x3ad4, 0x26dc, 0x3ade, 0x3b21, 0x3945, 0x3b53, 0x37f5, 0x3898, 0x36cf, 0x357e, 0x39a8, 0x3964, 0x3967, 0x3177, 0x3833, 0x3b1f, 0x38b8, 0x34f6, 0x38d0, 0x3b14, 0x2c06, 0x3b6f, 0x3392, 0x3a75, 0x37d3, 0x27ff, 0x3486, 0x37de,
0x31c6, 0x3b4c, 0x3a10, 0x36c3, 0x2c70, 0x31e4, 0x3112, 0x36f6, 0x34b0, 0x387f, 0x3b8b, 0x3ba1, 0x3bd3, 0x3a6f, 0x3899, 0x3a83, 0x3b85, 0x3bb6, 0x37f6, 0x3ac8, 0x333f, 0x2c6a, 0x369c, 0x39a5, 0x3819, 0x3b4b, 0x2c26, 0x35cf, 0x33e8, 0x3a13, 0x3aeb, 0x2b3d,
0x39b9, 0x3ad6, 0x380b, 0x39c5, 0x37ab, 0x32da, 0x38a4, 0x385c, 0x3b6c, 0x22ec, 0x325f, 0x397d, 0x234f, 0x3a34, 0x2d16, 0x3703, 0x3425, 0x3a92, 0x38db, 0x3201, 0x3700, 0x3bd2, 0x3a2e, 0x388a, 0x2bf9, 0x3710, 0x3376, 0x3638, 0x2ec5, 0x3bf3, 0x30c4, 0x3523,
0x36a5, 0x3bfb, 0x36e1, 0x2c30, 0x345f, 0x2c67, 0x38a9, 0x3259, 0x38bb, 0x3b98, 0x3b43, 0x388b, 0x38a6, 0x3756, 0x3816, 0x3a47, 0x35bd, 0x396d, 0x2076, 0x375e, 0x3731, 0x3735, 0x398c, 0x3931, 0x37a7, 0x2916, 0x3a6b, 0x3bab, 0x328b, 0x2ad8, 0x3882, 0x36b2,
0x3919, 0x3be9, 0x365d, 0x3853, 0x3a12, 0x3880, 0x3781, 0x3ac3, 0x3a6e, 0x30c2, 0x3b2a, 0x3a77, 0x3bf5, 0x30c7, 0x3244, 0x3684, 0x3648, 0x323b, 0x3657, 0x3982, 0x3432, 0x3bc5, 0x33c1, 0x343c, 0x362d, 0x3821, 0x362f, 0x3533, 0x3546, 0x38f7, 0x3a02, 0x357c,
0x3322, 0x36fe, 0x3930, 0x3add, 0x2c23, 0x3950, 0x3a37, 0x3a70, 0x3015, 0x2d4d, 0x3b09, 0x38a8, 0x3928, 0x3a5b, 0x3950, 0x3954, 0x3ba9, 0x2c92, 0x3588, 0x39fb, 0x3776, 0x3616, 0x35ca, 0x3b9f, 0x3b6e, 0x3861, 0x2a25, 0x38a0, 0x279a, 0x354d, 0x2595, 0x37e1,
0x3312, 0x379b, 0x3335, 0x3bfd, 0x36a6, 0x3172, 0x3928, 0x3a14, 0x381e, 0x2c48, 0x39dc, 0x3793, 0x2dfd, 0x3a08, 0x3ab1, 0x3536, 0x35ff, 0x36db, 0x3972, 0x38ac, 0x37b0, 0x32b0, 0x3837, 0x3837, 0x2a07, 0x33fd, 0x3412, 0x3388, 0x3aab, 0x1ac3, 0x330c, 0x39a3,
0x3b74, 0x3b9a, 0x3be3, 0x3a59, 0x30ba, 0x38d8, 0x313a, 0x3b76, 0x3945, 0x38e5, 0x3952, 0x36f7, 0x385d, 0x36f6, 0x3482, 0x3ad6, 0x3be1, 0x3a96, 0x3224, 0x35cd, 0x3258, 0x398a, 0x3264, 0x366d, 0x2541, 0x3920, 0x38d9, 0x3b1b, 0x3ab2, 0x3bd7, 0x3a24, 0x2b87,
0x2e8f, 0x3b88, 0x38ef, 0x2ad7, 0x3016, 0x3b6c, 0x2156, 0x2e06, 0x3b2a, 0x3b81, 0x375e, 0x38a0, 0x387a, 0x3950, 0x375e, 0x39b8, 0x3786, 0x2f58, 0x3ab7, 0x25a1, 0x32ac, 0x38dc, 0x3705, 0x2981, 0x2f31, 0x3860, 0x26a7, 0x3782, 0x2b4c, 0x34dd, 0x3bc5, 0x3be6,
0x3a16, 0x370e, 0x3b42, 0x30e8, 0x36dd, 0x32d6, 0x2245, 0x2ab5, 0x385e, 0x3905, 0x2b03, 0x3643, 0x38f4, 0x3931, 0x36ec, 0x2fc9, 0x397e, 0x3794, 0x2b2b, 0x396c, 0x29a0, 0x327b, 0x3a95, 0x3aa6, 0x2eba, 0x315d, 0x3048, 0x354a, 0x3210, 0x353b, 0x34de, 0x373f,
0x36a1, 0x3146, 0x3808, 0x314d, 0x2f11, 0x3b99, 0x36cc, 0x3b1b, 0x38ca, 0x3bfa, 0x38fc, 0x3b0d, 0x2a41, 0x3bca, 0x3067, 0x38a4, 0x3b93, 0x3690, 0x2b03, 0x39ea, 0x3309, 0x2e3d, 0x34cc, 0x28d0, 0x3432, 0x3923, 0x345c, 0x3899, 0x351b, 0x2dd9, 0x3744, 0x2cbb,
0x35e9, 0x349d, 0x298c, 0x382e, 0x2fac, 0x3a31, 0x388c, 0x314a, 0x3793, 0x3014, 0x38bd, 0x3b08, 0x3190, 0x3901, 0x39f3, 0x3b76, 0x37ab, 0x2d63, 0x3a7b, 0x3aed, 0x3b72, 0x3090, 0x3412, 0x287d, 0x3610, 0x3797, 0x3557, 0x39f9, 0x30bd, 0x34a4, 0x3275, 0x3b1f,
0x3a14, 0x3435, 0x326e, 0x3284, 0x3970, 0x2d6c, 0x3b21, 0x3b0d, 0x361d, 0x38f1, 0x35ca, 0x38c1, 0x3939, 0x332c, 0x3a39, 0x3511, 0x340a, 0x39a3, 0x30cf, 0x39c9, 0x30aa, 0x38d7, 0x3895, 0x2f70, 0x3886, 0x3b02, 0x3975, 0x37c2, 0x3abd, 0x3821, 0x357d, 0x3415,
0x32e4, 0x3aa7, 0x38fd, 0x37a8, 0x214b, 0x3847, 0x272b, 0x3893, 0x34af, 0x3a0b, 0x2775, 0x305e, 0x37a1, 0x267e, 0x32ba, 0x389c, 0x3995, 0x3a99, 0x3747, 0x37cc, 0x3471, 0x3a22, 0x315e, 0x3556, 0x37e9, 0x35db, 0x3be0, 0x3adc, 0x2c09, 0x3b70, 0x29df, 0x3bb9,
0x3896, 0x379d, 0x3a3c, 0x3bc1, 0x3667, 0x3a14, 0x392a, 0x3927, 0x3444, 0x3b08, 0x396f, 0x38f1, 0x38e1, 0x315d, 0x3941, 0x3426, 0x3714, 0x3066, 0x3349, 0x358b, 0x3b82, 0x3889, 0x370d, 0x39f4, 0x3828, 0x3469, 0x3bf8, 0x3070, 0x30e2, 0x3a4f, 0x30d0, 0x36f3,
0x35a1, 0x3718, 0x2fe2, 0x3bde, 0x388b, 0x39dc, 0x35a1, 0x3449, 0x3451, 0x3a55, 0x31bb, 0x3992, 0x3949, 0x3596, 0x3aea, 0x3b18, 0x39e4, 0x387c, 0x3535, 0x3a97, 0x3804, 0x3b9f, 0x3b8f, 0x2fa4, 0x2ca0, 0x3be2, 0x30d3, 0x3b90, 0x33fb, 0x392d, 0x3a3a, 0x3b38,
0x397d, 0x3851, 0x39e3, 0x39ee, 0x3b31, 0x3223, 0x345b, 0x2eae, 0x3b36, 0x38f1, 0x34ab, 0x323e, 0x3847, 0x3b94, 0x3ac1, 0x3985, 0x3326, 0x317c, 0x37cf, 0x3a47, 0x391c, 0x3bb7, 0x3b13, 0x324c, 0x36be, 0x3219, 0x3878, 0x36c7, 0x2d31, 0x291f, 0x3b15, 0x3a7e,
0x3af9, 0x313a, 0x39c0, 0x373b, 0x39a5, 0x39a8, 0x3a61, 0x367e, 0x3abe, 0x39bb, 0x34da, 0x2f97, 0x340b, 0x3227, 0x39d1, 0x313a, 0x3ab8, 0x390d, 0x2c4f, 0x30f2, 0x39b9, 0x3440, 0x3ab3, 0x2fe5, 0x2b13, 0x2e1d, 0x2d90, 0x3684, 0x34da, 0x2f95, 0x38c1, 0x3a8b,
0x3262, 0x2fb7, 0x3bc4, 0x3abd, 0x3731, 0x39e3, 0x3bd5, 0x38cc, 0x3911, 0x262e, 0x2f2c, 0x3be5, 0x3bfc, 0x38e7, 0x3046, 0x3b1e, 0x33d1, 0x3a8a, 0x3bd5, 0x398e, 0x2faa, 0x363d, 0x34ca, 0x3b37, 0x32fb, 0x345c, 0x30b5, 0x3825, 0x2ebe, 0x3a1b, 0x3010, 0x3849,
0x3623, 0x35d6, 0x3437, 0x32a4, 0x3041, 0x3345, 0x3415, 0x3b61, 0x3ae7, 0x2f1a, 0x2f3a, 0x355c, 0x3818, 0x3a71, 0x3880, 0x34ea, 0x3b36, 0x3aae, 0x3790, 0x38cb, 0x395a, 0x3aba, 0x39d1, 0x384f, 0x38a7, 0x3956, 0x357b, 0x3893, 0x3403, 0x28dc, 0x3a73, 0x36c8,
0x36e8, 0x3a6e, 0x329a, 0x3be4, 0x370d, 0x2a5d, 0x3386, 0x3a8c, 0x3532, 0x38e3, 0x2dd5, 0x3566, 0x3b2e, 0x3389, 0x2583, 0x27c1, 0x3bb7, 0x3223, 0x39f8, 0x378d, 0x2fa7, 0x38f3, 0x3b8c, 0x3358, 0x3a7a, 0x30d2, 0x3b7e, 0x3a6a, 0x38f8, 0x3916, 0x38b4, 0x3bf6,
0x3b42, 0x3258, 0x346c, 0x2116, 0x338c, 0x3871, 0x3165, 0x3917, 0x3981, 0x37db, 0x39f1, 0x3430, 0x34e6, 0x385b, 0x2e61, 0x2c3a, 0x38d3, 0x35f7, 0x379b, 0x3b07, 0x254d, 0x392e, 0x3a46, 0x3667, 0x369c, 0x3b20, 0x22fb, 0x310a, 0x34e3, 0x342e, 0x3bbd, 0x38fd,
0x38ba, 0x3bb3, 0x3976, 0x39e5, 0x353d, 0x35d6, 0x3a63, 0x3bc5, 0x3b44, 0x3bed, 0x3ba6, 0x3b67, 0x37b3, 0x3489, 0x340b, 0x3b70, 0x38f9, 0x39d3, 0x385a, 0x3446, 0x3461, 0x35b8, 0x39c4, 0x34a9, 0x3bee, 0x37c4, 0x38f6, 0x3271, 0x3a5c, 0x37ed, 0x3936, 0x2e94,
0x3a43, 0x3b66, 0x3ba2, 0x3905, 0x38a1, 0x3bdc, 0x3a6a, 0x30db, 0x3b9f, 0x3a84, 0x38e7, 0x385b, 0x3942, 0x3ac5, 0x365c, 0x34e1, 0x2c73, 0x38d1, 0x2629, 0x348b, 0x3b12, 0x3535, 0x3a73, 0x33ae, 0x3459, 0x3772, 0x3981, 0x3906, 0x2a92, 0x38fa, 0x3a33, 0x3ab5,
0x2c9a, 0x365e, 0x3811, 0x382a, 0x3aca, 0x3a32, 0x3a1a, 0x3b3a, 0x30d3, 0x36d8, 0x2d81, 0x370c, 0x367b, 0x3b07, 0x3b33, 0x3663, 0x395c, 0x387d, 0x3baa, 0x3966, 0x3b9a, 0x3439, 0x2be9, 0x38d7, 0x3ad8, 0x37d5, 0x2cf6, 0x3884, 0x388e, 0x3bcb, 0x3846, 0x3970,
0x3bc0, 0x3b61, 0x39d5, 0x304e, 0x189b, 0x2a39, 0x38c3, 0x3ae2, 0x3731, 0x3825, 0x381b, 0x3690, 0x3446, 0x3884, 0x397b, 0x306f, 0x38f4, 0x3933, 0x3a55, 0x36bc, 0x2c17, 0x3af0, 0x3221, 0x381a, 0x38c8, 0x38e5, 0x348c, 0x2178, 0x397a, 0x3aea, 0x35a1, 0x3b58,
0x3918, 0x3004, 0x39b7, 0x33ca, 0x3ad3, 0x33d9, 0x38a9, 0x1c39, 0x379a, 0x2f87, 0x3523, 0x2345, 0x2cc4, 0x39e6, 0x36cc, 0x2dd9, 0x3b69, 0x31e6, 0x34be, 0x3759, 0x36dc, 0x3bc6, 0x3b2d, 0x39ce, 0x3824, 0x3be7, 0x336b, 0x3925, 0x39fd, 0x3a57, 0x343c, 0x393c,
0x3964, 0x2673, 0x3a04, 0x38f0, 0x2f49, 0x382c, 0x38f1, 0x3839, 0x3555, 0x3adb, 0x3267, 0x2e42, 0x2819, 0x3121, 0x3268, 0x36dd, 0x2e76, 0x3a1d, 0x2e98, 0x3218, 0x251b, 0x3236, 0x3b8f, 0x29db, 0x3589, 0x3bac, 0x3bd3, 0x3233, 0x356d, 0x3944, 0x3a6e, 0x3a54
};

  uint16_t z_oup [1024] __attribute__ ((aligned(64))) = {
0x4919, 0x4926, 0x4969, 0x48d9, 0x48a8, 0x4974, 0x489b, 0x4771, 0x4846, 0x498e, 0x4896, 0x4936, 0x4829, 0x481f, 0x48fa, 0x496b, 0x48df, 0x48cb, 0x49b6, 0x4880, 0x48db, 0x477f, 0x4954, 0x4854, 0x47d7, 0x48b4, 0x4873, 0x4991, 0x4900, 0x494b, 0x48fc, 0x491f,
0x48dc, 0x48b3, 0x49cf, 0x486e, 0x48e8, 0x4884, 0x4861, 0x482b, 0x47fd, 0x4913, 0x47a8, 0x48e1, 0x4738, 0x487d, 0x48f8, 0x494e, 0x48b5, 0x484f, 0x4940, 0x4898, 0x493b, 0x4729, 0x49ab, 0x4858, 0x4806, 0x4854, 0x482c, 0x48dd, 0x48b6, 0x492d, 0x48a5, 0x4849,
0x4822, 0x4870, 0x483e, 0x4898, 0x47cf, 0x476e, 0x469e, 0x45d8, 0x4741, 0x484f, 0x47e9, 0x4836, 0x47ac, 0x4722, 0x485f, 0x48f4, 0x484c, 0x4705, 0x48ac, 0x46ba, 0x487b, 0x46f8, 0x47d6, 0x467c, 0x475b, 0x46f9, 0x4760, 0x4851, 0x4828, 0x4851, 0x472d, 0x490d,
0x47c7, 0x483f, 0x4831, 0x48ac, 0x4817, 0x4819, 0x4840, 0x47bc, 0x47bc, 0x4844, 0x47ea, 0x48a9, 0x47d5, 0x4839, 0x489a, 0x48f2, 0x475a, 0x479c, 0x493e, 0x487c, 0x4808, 0x46ae, 0x48bd, 0x46f6, 0x4720, 0x4725, 0x47e8, 0x4840, 0x48ac, 0x48a3, 0x4853, 0x48ad,
0x48d6, 0x493b, 0x4892, 0x486d, 0x48fb, 0x485a, 0x484c, 0x4830, 0x488a, 0x4973, 0x47dd, 0x491f, 0x4825, 0x482b, 0x4911, 0x4958, 0x491c, 0x4815, 0x494d, 0x484e, 0x4951, 0x47a2, 0x492d, 0x4896, 0x4704, 0x4907, 0x4811, 0x494f, 0x48bc, 0x48f2, 0x485c, 0x48dc,
0x4835, 0x48c0, 0x48d2, 0x4829, 0x4770, 0x47aa, 0x47be, 0x472f, 0x4638, 0x4883, 0x472e, 0x48ad, 0x482b, 0x474b, 0x4859, 0x48e8, 0x47e4, 0x481f, 0x48dd, 0x483d, 0x4811, 0x45e3, 0x47da, 0x46c2, 0x46d7, 0x47fe, 0x46f7, 0x4824, 0x4875, 0x483f, 0x4816, 0x480a,
0x4964, 0x49b5, 0x493a, 0x4930, 0x490e, 0x4906, 0x48d3, 0x4852, 0x490a, 0x49c2, 0x4827, 0x4944, 0x47f5, 0x4931, 0x4959, 0x4956, 0x4932, 0x48c4, 0x4a2a, 0x488d, 0x4999, 0x4847, 0x49b7, 0x48a1, 0x47b3, 0x492d, 0x482a, 0x4904, 0x48ee, 0x4984, 0x48cd, 0x493f,
0x483e, 0x489c, 0x48d3, 0x46e9, 0x472f, 0x4808, 0x47a7, 0x46b5, 0x4774, 0x488c, 0x4776, 0x484b, 0x4772, 0x4839, 0x4860, 0x485c, 0x47bc, 0x4811, 0x483f, 0x4810, 0x47d8, 0x46aa, 0x48d0, 0x4775, 0x469a, 0x47c5, 0x4834, 0x48e2, 0x47d7, 0x483a, 0x47a2, 0x4828,
0x4862, 0x4889, 0x486c, 0x47f8, 0x47de, 0x4833, 0x4842, 0x4788, 0x4790, 0x4816, 0x47b2, 0x4892, 0x47ec, 0x4774, 0x4819, 0x4885, 0x478c, 0x4740, 0x483b, 0x4851, 0x47da, 0x464f, 0x481e, 0x45be, 0x46a6, 0x4747, 0x474a, 0x477d, 0x4864, 0x47f6, 0x48ac, 0x4847,
0x4960, 0x4a14, 0x499a, 0x4976, 0x4914, 0x490d, 0x4928, 0x48cc, 0x488f, 0x4967, 0x48d5, 0x498c, 0x4917, 0x4900, 0x4a11, 0x49e5, 0x496e, 0x488d, 0x49fe, 0x496b, 0x493a, 0x4839, 0x4947, 0x487e, 0x489b, 0x4903, 0x48a1, 0x4912, 0x4984, 0x4932, 0x492c, 0x49de,
0x47cb, 0x48c6, 0x4841, 0x47f2, 0x4814, 0x482c, 0x47e0, 0x46db, 0x4758, 0x4806, 0x4812, 0x4860, 0x4807, 0x4815, 0x48e5, 0x487b, 0x47cc, 0x47fb, 0x48c7, 0x47dd, 0x4807, 0x46b4, 0x48a3, 0x478a, 0x46fd, 0x475c, 0x4793, 0x47d4, 0x48df, 0x47b9, 0x47f2, 0x48cc,
0x4864, 0x48f6, 0x4903, 0x47c4, 0x484b, 0x4884, 0x47e4, 0x47b6, 0x4765, 0x4876, 0x4810, 0x4889, 0x47e8, 0x4804, 0x4865, 0x48e5, 0x482b, 0x480a, 0x48e3, 0x485c, 0x4829, 0x4780, 0x4838, 0x47df, 0x46aa, 0x4783, 0x485f, 0x4899, 0x4904, 0x4841, 0x482a, 0x47ff,
0x48b7, 0x497b, 0x494f, 0x4848, 0x486f, 0x4867, 0x488c, 0x4807, 0x4807, 0x492e, 0x47b4, 0x48d1, 0x489a, 0x4847, 0x4935, 0x496a, 0x4895, 0x4825, 0x496c, 0x4855, 0x4833, 0x47dc, 0x48fa, 0x4770, 0x469c, 0x488b, 0x4827, 0x48cb, 0x4949, 0x48af, 0x487d, 0x496f,
0x4854, 0x48bc, 0x48c9, 0x4798, 0x48b2, 0x47ea, 0x47c9, 0x4612, 0x482e, 0x48ca, 0x46e5, 0x4885, 0x47d7, 0x4844, 0x484c, 0x48b5, 0x486f, 0x47ac, 0x4884, 0x484f, 0x4839, 0x460b, 0x48a9, 0x4818, 0x4691, 0x47f0, 0x4768, 0x4839, 0x48a5, 0x484f, 0x4818, 0x480b,
0x4897, 0x48bb, 0x4936, 0x4831, 0x48da, 0x4950, 0x489d, 0x484d, 0x488b, 0x4995, 0x482d, 0x4929, 0x47b6, 0x48f6, 0x48e4, 0x493c, 0x48d8, 0x481e, 0x4974, 0x48b0, 0x48d0, 0x46f7, 0x4931, 0x4843, 0x47b9, 0x48d9, 0x489f, 0x48c5, 0x490c, 0x48cd, 0x4903, 0x4876,
0x4889, 0x495c, 0x48ba, 0x484c, 0x4844, 0x4863, 0x4880, 0x478a, 0x4852, 0x48d7, 0x484f, 0x48ec, 0x4854, 0x4898, 0x4964, 0x4960, 0x483d, 0x4852, 0x492b, 0x4908, 0x48c6, 0x471e, 0x4888, 0x465b, 0x473d, 0x487c, 0x4858, 0x48ef, 0x48b9, 0x4898, 0x4803, 0x4935,
0x48d3, 0x4924, 0x48b5, 0x4896, 0x48ff, 0x4904, 0x48cd, 0x4808, 0x482e, 0x4924, 0x4825, 0x4934, 0x48a7, 0x489b, 0x499f, 0x48f5, 0x48bc, 0x4868, 0x49ce, 0x4868, 0x48cc, 0x482e, 0x49aa, 0x48df, 0x4858, 0x48dc, 0x4875, 0x490d, 0x4955, 0x496f, 0x4880, 0x491f,
0x48b7, 0x4967, 0x4977, 0x48d2, 0x4885, 0x483b, 0x4879, 0x47fb, 0x4766, 0x48dd, 0x47b9, 0x4934, 0x481d, 0x46d9, 0x482a, 0x49d5, 0x48c8, 0x48b3, 0x499e, 0x483e, 0x4887, 0x4733, 0x48bb, 0x4744, 0x4816, 0x47ba, 0x48b8, 0x4932, 0x4939, 0x4911, 0x48ae, 0x4932,
0x4905, 0x4959, 0x49a6, 0x490a, 0x4911, 0x491f, 0x48be, 0x483b, 0x4829, 0x498d, 0x48a3, 0x48f1, 0x484f, 0x4841, 0x4946, 0x48e5, 0x48de, 0x4861, 0x499c, 0x481b, 0x48dd, 0x47d2, 0x4986, 0x48c7, 0x47e1, 0x487e, 0x48ec, 0x48c1, 0x4907, 0x4932, 0x48a1, 0x48da,
0x4857, 0x48aa, 0x4882, 0x483f, 0x4844, 0x4861, 0x47ef, 0x4703, 0x477d, 0x489e, 0x46fb, 0x48e0, 0x481f, 0x4828, 0x48f7, 0x4911, 0x4800, 0x480c, 0x4870, 0x48c4, 0x487a, 0x47a1, 0x48bc, 0x46c7, 0x468f, 0x4827, 0x47b1, 0x48a1, 0x486e, 0x4862, 0x4856, 0x4877,
0x481d, 0x481d, 0x47e3, 0x477f, 0x483c, 0x479b, 0x46e1, 0x45d6, 0x46ac, 0x484b, 0x4571, 0x4809, 0x464d, 0x4793, 0x4866, 0x4815, 0x46c9, 0x45b1, 0x489c, 0x4822, 0x47fc, 0x4673, 0x483a, 0x46c6, 0x4557, 0x46bc, 0x45e9, 0x473d, 0x477c, 0x46e5, 0x477e, 0x4795,
0x487c, 0x481d, 0x4892, 0x4821, 0x4847, 0x4899, 0x47c9, 0x4718, 0x474f, 0x4876, 0x479c, 0x4846, 0x4813, 0x476d, 0x48a1, 0x486c, 0x482c, 0x47f0, 0x48b3, 0x47ca, 0x4847, 0x469c, 0x48b9, 0x47a5, 0x4620, 0x4678, 0x47ea, 0x4887, 0x480d, 0x47bc, 0x47d8, 0x48c2,
0x4858, 0x4837, 0x4911, 0x481f, 0x4897, 0x4820, 0x4893, 0x46d5, 0x4752, 0x48a1, 0x46ce, 0x48cf, 0x479a, 0x47c5, 0x481a, 0x486c, 0x47e1, 0x47d3, 0x48e7, 0x47aa, 0x480d, 0x459a, 0x487b, 0x47ef, 0x4574, 0x481d, 0x47ee, 0x4869, 0x4887, 0x488a, 0x46d5, 0x4704,
0x488a, 0x48fd, 0x48c5, 0x487c, 0x489b, 0x4917, 0x489f, 0x4868, 0x4832, 0x491d, 0x4872, 0x48c9, 0x4813, 0x483e, 0x491b, 0x48e3, 0x48f5, 0x48d2, 0x49a1, 0x47e3, 0x4881, 0x47ff, 0x48e0, 0x47eb, 0x4823, 0x48bb, 0x484c, 0x4869, 0x4925, 0x48d6, 0x48e3, 0x4927,
0x4839, 0x4841, 0x4869, 0x4858, 0x489d, 0x4841, 0x47cd, 0x46c9, 0x4720, 0x489c, 0x46b1, 0x48a1, 0x4717, 0x4784, 0x4822, 0x4859, 0x481c, 0x47c9, 0x48c5, 0x47a8, 0x4837, 0x4674, 0x48bd, 0x4771, 0x47ee, 0x46d8, 0x484e, 0x4825, 0x485e, 0x48bf, 0x4878, 0x4815,
0x488d, 0x48de, 0x488d, 0x480c, 0x47c7, 0x489b, 0x4795, 0x4772, 0x4803, 0x48f3, 0x486b, 0x48a5, 0x475d, 0x47d9, 0x489c, 0x489d, 0x486a, 0x485b, 0x495d, 0x4820, 0x4837, 0x46f1, 0x4893, 0x4695, 0x47ac, 0x4868, 0x4737, 0x482e, 0x486c, 0x48a3, 0x48db, 0x48ab,
0x4862, 0x4865, 0x48d6, 0x481a, 0x474f, 0x481c, 0x48b9, 0x47fd, 0x4639, 0x48a5, 0x4787, 0x4881, 0x4610, 0x4798, 0x4842, 0x4857, 0x485f, 0x4793, 0x48f8, 0x47d4, 0x478d, 0x45c5, 0x485a, 0x4641, 0x4726, 0x47a0, 0x470b, 0x4727, 0x48b2, 0x483a, 0x4840, 0x4819,
0x487d, 0x48d6, 0x48c1, 0x4831, 0x4860, 0x478d, 0x4801, 0x46cb, 0x482f, 0x48b1, 0x4720, 0x487f, 0x47dc, 0x4847, 0x4835, 0x4888, 0x4810, 0x4711, 0x488a, 0x4823, 0x48a4, 0x4667, 0x48af, 0x4772, 0x45ad, 0x47ff, 0x47c6, 0x4899, 0x484a, 0x4816, 0x47ce, 0x4854,
0x47bd, 0x489d, 0x48c1, 0x4789, 0x483f, 0x46f0, 0x4845, 0x47ca, 0x473b, 0x4841, 0x4598, 0x489b, 0x4726, 0x481a, 0x488c, 0x48a2, 0x475d, 0x4772, 0x48e8, 0x4826, 0x485d, 0x4606, 0x485c, 0x4711, 0x46c0, 0x4802, 0x46c6, 0x4898, 0x489e, 0x48d1, 0x4813, 0x4768,
0x4853, 0x48d8, 0x4899, 0x4718, 0x4760, 0x482a, 0x4838, 0x47fc, 0x4712, 0x484e, 0x47ab, 0x48c8, 0x4780, 0x480d, 0x4922, 0x4800, 0x4798, 0x4841, 0x4903, 0x4769, 0x47c8, 0x4758, 0x487b, 0x4710, 0x47e8, 0x47f9, 0x4718, 0x470c, 0x48bf, 0x4885, 0x483f, 0x488f,
0x488b, 0x4872, 0x48a9, 0x477a, 0x4872, 0x4860, 0x4829, 0x4638, 0x4809, 0x484d, 0x46f7, 0x4866, 0x46d3, 0x484c, 0x48a4, 0x4822, 0x4854, 0x478c, 0x48c4, 0x4837, 0x4892, 0x4701, 0x48d7, 0x4839, 0x480d, 0x4835, 0x4704, 0x4887, 0x4855, 0x48d2, 0x4845, 0x4841,
0x476f, 0x47f9, 0x4843, 0x4698, 0x4754, 0x4827, 0x47da, 0x46ae, 0x467a, 0x4813, 0x46bd, 0x4833, 0x4686, 0x4715, 0x47c3, 0x4827, 0x46ac, 0x4803, 0x481f, 0x4734, 0x47aa, 0x45e0, 0x4847, 0x467d, 0x46ca, 0x4737, 0x47e9, 0x47b2, 0x4807, 0x4815, 0x47f8, 0x4790
};
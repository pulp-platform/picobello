// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.1 (64-bit)
// Version: 2022.2.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="axi_hls_tg_axi_hls_tg,hls_ip_2022_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=3.300000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.409000,HLS_SYN_LAT=204806,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=3125,HLS_SYN_LUT=5141,HLS_VERSION=2022_2_1}" *)

module axi_hls_tg (
        ap_clk,
        ap_rst_n,
        m_axi_wide_port_AWVALID,
        m_axi_wide_port_AWREADY,
        m_axi_wide_port_AWADDR,
        m_axi_wide_port_AWID,
        m_axi_wide_port_AWLEN,
        m_axi_wide_port_AWSIZE,
        m_axi_wide_port_AWBURST,
        m_axi_wide_port_AWLOCK,
        m_axi_wide_port_AWCACHE,
        m_axi_wide_port_AWPROT,
        m_axi_wide_port_AWQOS,
        m_axi_wide_port_AWREGION,
        m_axi_wide_port_AWUSER,
        m_axi_wide_port_WVALID,
        m_axi_wide_port_WREADY,
        m_axi_wide_port_WDATA,
        m_axi_wide_port_WSTRB,
        m_axi_wide_port_WLAST,
        m_axi_wide_port_WID,
        m_axi_wide_port_WUSER,
        m_axi_wide_port_ARVALID,
        m_axi_wide_port_ARREADY,
        m_axi_wide_port_ARADDR,
        m_axi_wide_port_ARID,
        m_axi_wide_port_ARLEN,
        m_axi_wide_port_ARSIZE,
        m_axi_wide_port_ARBURST,
        m_axi_wide_port_ARLOCK,
        m_axi_wide_port_ARCACHE,
        m_axi_wide_port_ARPROT,
        m_axi_wide_port_ARQOS,
        m_axi_wide_port_ARREGION,
        m_axi_wide_port_ARUSER,
        m_axi_wide_port_RVALID,
        m_axi_wide_port_RREADY,
        m_axi_wide_port_RDATA,
        m_axi_wide_port_RLAST,
        m_axi_wide_port_RID,
        m_axi_wide_port_RUSER,
        m_axi_wide_port_RRESP,
        m_axi_wide_port_BVALID,
        m_axi_wide_port_BREADY,
        m_axi_wide_port_BRESP,
        m_axi_wide_port_BID,
        m_axi_wide_port_BUSER,
        m_axi_narrow_port_AWVALID,
        m_axi_narrow_port_AWREADY,
        m_axi_narrow_port_AWADDR,
        m_axi_narrow_port_AWID,
        m_axi_narrow_port_AWLEN,
        m_axi_narrow_port_AWSIZE,
        m_axi_narrow_port_AWBURST,
        m_axi_narrow_port_AWLOCK,
        m_axi_narrow_port_AWCACHE,
        m_axi_narrow_port_AWPROT,
        m_axi_narrow_port_AWQOS,
        m_axi_narrow_port_AWREGION,
        m_axi_narrow_port_AWUSER,
        m_axi_narrow_port_WVALID,
        m_axi_narrow_port_WREADY,
        m_axi_narrow_port_WDATA,
        m_axi_narrow_port_WSTRB,
        m_axi_narrow_port_WLAST,
        m_axi_narrow_port_WID,
        m_axi_narrow_port_WUSER,
        m_axi_narrow_port_ARVALID,
        m_axi_narrow_port_ARREADY,
        m_axi_narrow_port_ARADDR,
        m_axi_narrow_port_ARID,
        m_axi_narrow_port_ARLEN,
        m_axi_narrow_port_ARSIZE,
        m_axi_narrow_port_ARBURST,
        m_axi_narrow_port_ARLOCK,
        m_axi_narrow_port_ARCACHE,
        m_axi_narrow_port_ARPROT,
        m_axi_narrow_port_ARQOS,
        m_axi_narrow_port_ARREGION,
        m_axi_narrow_port_ARUSER,
        m_axi_narrow_port_RVALID,
        m_axi_narrow_port_RREADY,
        m_axi_narrow_port_RDATA,
        m_axi_narrow_port_RLAST,
        m_axi_narrow_port_RID,
        m_axi_narrow_port_RUSER,
        m_axi_narrow_port_RRESP,
        m_axi_narrow_port_BVALID,
        m_axi_narrow_port_BREADY,
        m_axi_narrow_port_BRESP,
        m_axi_narrow_port_BID,
        m_axi_narrow_port_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_state2 = 23'd2;
parameter    ap_ST_fsm_state3 = 23'd4;
parameter    ap_ST_fsm_state4 = 23'd8;
parameter    ap_ST_fsm_state5 = 23'd16;
parameter    ap_ST_fsm_state6 = 23'd32;
parameter    ap_ST_fsm_state7 = 23'd64;
parameter    ap_ST_fsm_state8 = 23'd128;
parameter    ap_ST_fsm_state9 = 23'd256;
parameter    ap_ST_fsm_state10 = 23'd512;
parameter    ap_ST_fsm_state11 = 23'd1024;
parameter    ap_ST_fsm_state12 = 23'd2048;
parameter    ap_ST_fsm_state13 = 23'd4096;
parameter    ap_ST_fsm_state14 = 23'd8192;
parameter    ap_ST_fsm_state15 = 23'd16384;
parameter    ap_ST_fsm_state16 = 23'd32768;
parameter    ap_ST_fsm_state17 = 23'd65536;
parameter    ap_ST_fsm_state18 = 23'd131072;
parameter    ap_ST_fsm_state19 = 23'd262144;
parameter    ap_ST_fsm_state20 = 23'd524288;
parameter    ap_ST_fsm_state21 = 23'd1048576;
parameter    ap_ST_fsm_state22 = 23'd2097152;
parameter    ap_ST_fsm_state23 = 23'd4194304;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_NARROW_PORT_ID_WIDTH = 1;
parameter    C_M_AXI_NARROW_PORT_ADDR_WIDTH = 64;
parameter    C_M_AXI_NARROW_PORT_DATA_WIDTH = 64;
parameter    C_M_AXI_NARROW_PORT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_NARROW_PORT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_NARROW_PORT_WUSER_WIDTH = 1;
parameter    C_M_AXI_NARROW_PORT_RUSER_WIDTH = 1;
parameter    C_M_AXI_NARROW_PORT_BUSER_WIDTH = 1;
parameter    C_M_AXI_NARROW_PORT_USER_VALUE = 0;
parameter    C_M_AXI_NARROW_PORT_PROT_VALUE = 0;
parameter    C_M_AXI_NARROW_PORT_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_WIDE_PORT_ID_WIDTH = 1;
parameter    C_M_AXI_WIDE_PORT_ADDR_WIDTH = 64;
parameter    C_M_AXI_WIDE_PORT_DATA_WIDTH = 64;
parameter    C_M_AXI_WIDE_PORT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_WIDE_PORT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WIDE_PORT_WUSER_WIDTH = 1;
parameter    C_M_AXI_WIDE_PORT_RUSER_WIDTH = 1;
parameter    C_M_AXI_WIDE_PORT_BUSER_WIDTH = 1;
parameter    C_M_AXI_WIDE_PORT_USER_VALUE = 0;
parameter    C_M_AXI_WIDE_PORT_PROT_VALUE = 0;
parameter    C_M_AXI_WIDE_PORT_CACHE_VALUE = 3;

parameter    C_M_AXI_LOCK = 1;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_NARROW_PORT_WSTRB_WIDTH = (64 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WIDE_PORT_WSTRB_WIDTH = (64 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_wide_port_AWVALID;
input   m_axi_wide_port_AWREADY;
output  [C_M_AXI_WIDE_PORT_ADDR_WIDTH - 1:0] m_axi_wide_port_AWADDR;
output  [C_M_AXI_WIDE_PORT_ID_WIDTH - 1:0] m_axi_wide_port_AWID;
output  [7:0] m_axi_wide_port_AWLEN;
output  [2:0] m_axi_wide_port_AWSIZE;
output  [1:0] m_axi_wide_port_AWBURST;
output  [C_M_AXI_LOCK-1:0] m_axi_wide_port_AWLOCK;
output  [3:0] m_axi_wide_port_AWCACHE;
output  [2:0] m_axi_wide_port_AWPROT;
output  [3:0] m_axi_wide_port_AWQOS;
output  [3:0] m_axi_wide_port_AWREGION;
output  [C_M_AXI_WIDE_PORT_AWUSER_WIDTH - 1:0] m_axi_wide_port_AWUSER;
output   m_axi_wide_port_WVALID;
input   m_axi_wide_port_WREADY;
output  [C_M_AXI_WIDE_PORT_DATA_WIDTH - 1:0] m_axi_wide_port_WDATA;
output  [C_M_AXI_WIDE_PORT_WSTRB_WIDTH - 1:0] m_axi_wide_port_WSTRB;
output   m_axi_wide_port_WLAST;
output  [C_M_AXI_WIDE_PORT_ID_WIDTH - 1:0] m_axi_wide_port_WID;
output  [C_M_AXI_WIDE_PORT_WUSER_WIDTH - 1:0] m_axi_wide_port_WUSER;
output   m_axi_wide_port_ARVALID;
input   m_axi_wide_port_ARREADY;
output  [C_M_AXI_WIDE_PORT_ADDR_WIDTH - 1:0] m_axi_wide_port_ARADDR;
output  [C_M_AXI_WIDE_PORT_ID_WIDTH - 1:0] m_axi_wide_port_ARID;
output  [7:0] m_axi_wide_port_ARLEN;
output  [2:0] m_axi_wide_port_ARSIZE;
output  [1:0] m_axi_wide_port_ARBURST;
output  [C_M_AXI_LOCK-1:0] m_axi_wide_port_ARLOCK;
output  [3:0] m_axi_wide_port_ARCACHE;
output  [2:0] m_axi_wide_port_ARPROT;
output  [3:0] m_axi_wide_port_ARQOS;
output  [3:0] m_axi_wide_port_ARREGION;
output  [C_M_AXI_WIDE_PORT_ARUSER_WIDTH - 1:0] m_axi_wide_port_ARUSER;
input   m_axi_wide_port_RVALID;
output   m_axi_wide_port_RREADY;
input  [C_M_AXI_WIDE_PORT_DATA_WIDTH - 1:0] m_axi_wide_port_RDATA;
input   m_axi_wide_port_RLAST;
input  [C_M_AXI_WIDE_PORT_ID_WIDTH - 1:0] m_axi_wide_port_RID;
input  [C_M_AXI_WIDE_PORT_RUSER_WIDTH - 1:0] m_axi_wide_port_RUSER;
input  [1:0] m_axi_wide_port_RRESP;
input   m_axi_wide_port_BVALID;
output   m_axi_wide_port_BREADY;
input  [1:0] m_axi_wide_port_BRESP;
input  [C_M_AXI_WIDE_PORT_ID_WIDTH - 1:0] m_axi_wide_port_BID;
input  [C_M_AXI_WIDE_PORT_BUSER_WIDTH - 1:0] m_axi_wide_port_BUSER;
output   m_axi_narrow_port_AWVALID;
input   m_axi_narrow_port_AWREADY;
output  [C_M_AXI_NARROW_PORT_ADDR_WIDTH - 1:0] m_axi_narrow_port_AWADDR;
output  [C_M_AXI_NARROW_PORT_ID_WIDTH - 1:0] m_axi_narrow_port_AWID;
output  [7:0] m_axi_narrow_port_AWLEN;
output  [2:0] m_axi_narrow_port_AWSIZE;
output  [1:0] m_axi_narrow_port_AWBURST;
output  [C_M_AXI_LOCK-1:0] m_axi_narrow_port_AWLOCK;
output  [3:0] m_axi_narrow_port_AWCACHE;
output  [2:0] m_axi_narrow_port_AWPROT;
output  [3:0] m_axi_narrow_port_AWQOS;
output  [3:0] m_axi_narrow_port_AWREGION;
output  [C_M_AXI_NARROW_PORT_AWUSER_WIDTH - 1:0] m_axi_narrow_port_AWUSER;
output   m_axi_narrow_port_WVALID;
input   m_axi_narrow_port_WREADY;
output  [C_M_AXI_NARROW_PORT_DATA_WIDTH - 1:0] m_axi_narrow_port_WDATA;
output  [C_M_AXI_NARROW_PORT_WSTRB_WIDTH - 1:0] m_axi_narrow_port_WSTRB;
output   m_axi_narrow_port_WLAST;
output  [C_M_AXI_NARROW_PORT_ID_WIDTH - 1:0] m_axi_narrow_port_WID;
output  [C_M_AXI_NARROW_PORT_WUSER_WIDTH - 1:0] m_axi_narrow_port_WUSER;
output   m_axi_narrow_port_ARVALID;
input   m_axi_narrow_port_ARREADY;
output  [C_M_AXI_NARROW_PORT_ADDR_WIDTH - 1:0] m_axi_narrow_port_ARADDR;
output  [C_M_AXI_NARROW_PORT_ID_WIDTH - 1:0] m_axi_narrow_port_ARID;
output  [7:0] m_axi_narrow_port_ARLEN;
output  [2:0] m_axi_narrow_port_ARSIZE;
output  [1:0] m_axi_narrow_port_ARBURST;
output  [C_M_AXI_LOCK-1:0] m_axi_narrow_port_ARLOCK;
output  [3:0] m_axi_narrow_port_ARCACHE;
output  [2:0] m_axi_narrow_port_ARPROT;
output  [3:0] m_axi_narrow_port_ARQOS;
output  [3:0] m_axi_narrow_port_ARREGION;
output  [C_M_AXI_NARROW_PORT_ARUSER_WIDTH - 1:0] m_axi_narrow_port_ARUSER;
input   m_axi_narrow_port_RVALID;
output   m_axi_narrow_port_RREADY;
input  [C_M_AXI_NARROW_PORT_DATA_WIDTH - 1:0] m_axi_narrow_port_RDATA;
input   m_axi_narrow_port_RLAST;
input  [C_M_AXI_NARROW_PORT_ID_WIDTH - 1:0] m_axi_narrow_port_RID;
input  [C_M_AXI_NARROW_PORT_RUSER_WIDTH - 1:0] m_axi_narrow_port_RUSER;
input  [1:0] m_axi_narrow_port_RRESP;
input   m_axi_narrow_port_BVALID;
output   m_axi_narrow_port_BREADY;
input  [1:0] m_axi_narrow_port_BRESP;
input  [C_M_AXI_NARROW_PORT_ID_WIDTH - 1:0] m_axi_narrow_port_BID;
input  [C_M_AXI_NARROW_PORT_BUSER_WIDTH - 1:0] m_axi_narrow_port_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] wide_port_offset;
wire   [63:0] narrow_port_offset;
wire   [63:0] traffic_dim;
wire   [63:0] compute_dim;
wire   [63:0] traffic_id;
reg    wide_port_blk_n_AR;
wire    ap_CS_fsm_state4;
reg    wide_port_blk_n_AW;
wire    ap_CS_fsm_state16;
reg    wide_port_blk_n_B;
wire    ap_CS_fsm_state23;
reg    narrow_port_blk_n_AR;
reg    narrow_port_blk_n_AW;
reg    narrow_port_blk_n_B;
reg   [63:0] traffic_id_read_reg_368;
wire    ap_CS_fsm_state2;
reg   [63:0] compute_dim_read_reg_374;
reg   [55:0] div_i_i_cast_reg_379;
wire  signed [60:0] p_cast_fu_245_p4;
reg   [60:0] p_cast_reg_385;
reg   [63:0] wide_port_addr_reg_391;
wire  signed [60:0] p_cast1_fu_265_p4;
reg   [60:0] p_cast1_reg_396;
reg   [63:0] narrow_port_addr_reg_402;
reg   [55:0] trunc_ln_reg_417;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln66_fu_288_p2;
reg   [7:0] wide_buffer_V_address0;
reg    wide_buffer_V_ce0;
reg    wide_buffer_V_we0;
reg   [63:0] wide_buffer_V_d0;
wire   [63:0] wide_buffer_V_q0;
reg    wide_buffer_V_ce1;
wire   [63:0] wide_buffer_V_q1;
reg   [7:0] narrow_buffer_V_address0;
reg    narrow_buffer_V_ce0;
reg    narrow_buffer_V_we0;
reg   [63:0] narrow_buffer_V_d0;
wire   [63:0] narrow_buffer_V_q0;
reg    narrow_buffer_V_ce1;
wire   [63:0] narrow_buffer_V_q1;
wire    grp_axi_hls_tg_Pipeline_init_buffers_fu_178_ap_start;
wire    grp_axi_hls_tg_Pipeline_init_buffers_fu_178_ap_done;
wire    grp_axi_hls_tg_Pipeline_init_buffers_fu_178_ap_idle;
wire    grp_axi_hls_tg_Pipeline_init_buffers_fu_178_ap_ready;
wire   [7:0] grp_axi_hls_tg_Pipeline_init_buffers_fu_178_wide_buffer_V_address0;
wire    grp_axi_hls_tg_Pipeline_init_buffers_fu_178_wide_buffer_V_ce0;
wire    grp_axi_hls_tg_Pipeline_init_buffers_fu_178_wide_buffer_V_we0;
wire   [63:0] grp_axi_hls_tg_Pipeline_init_buffers_fu_178_wide_buffer_V_d0;
wire   [7:0] grp_axi_hls_tg_Pipeline_init_buffers_fu_178_narrow_buffer_V_address0;
wire    grp_axi_hls_tg_Pipeline_init_buffers_fu_178_narrow_buffer_V_ce0;
wire    grp_axi_hls_tg_Pipeline_init_buffers_fu_178_narrow_buffer_V_we0;
wire   [63:0] grp_axi_hls_tg_Pipeline_init_buffers_fu_178_narrow_buffer_V_d0;
wire    grp_axi_hls_tg_Pipeline_2_fu_186_ap_start;
wire    grp_axi_hls_tg_Pipeline_2_fu_186_ap_done;
wire    grp_axi_hls_tg_Pipeline_2_fu_186_ap_idle;
wire    grp_axi_hls_tg_Pipeline_2_fu_186_ap_ready;
wire    grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWVALID;
wire   [63:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWADDR;
wire   [0:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWID;
wire   [31:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWLEN;
wire   [2:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWSIZE;
wire   [1:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWBURST;
wire   [1:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWLOCK;
wire   [3:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWCACHE;
wire   [2:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWPROT;
wire   [3:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWQOS;
wire   [3:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWREGION;
wire   [0:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWUSER;
wire    grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_WVALID;
wire   [63:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_WDATA;
wire   [7:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_WSTRB;
wire    grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_WLAST;
wire   [0:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_WID;
wire   [0:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_WUSER;
wire    grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARVALID;
wire   [63:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARADDR;
wire   [0:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARID;
wire   [31:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARLEN;
wire   [2:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARSIZE;
wire   [1:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARBURST;
wire   [1:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARLOCK;
wire   [3:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARCACHE;
wire   [2:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARPROT;
wire   [3:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARQOS;
wire   [3:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARREGION;
wire   [0:0] grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARUSER;
wire    grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_RREADY;
wire    grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_BREADY;
wire   [7:0] grp_axi_hls_tg_Pipeline_2_fu_186_wide_buffer_V_address0;
wire    grp_axi_hls_tg_Pipeline_2_fu_186_wide_buffer_V_ce0;
wire    grp_axi_hls_tg_Pipeline_2_fu_186_wide_buffer_V_we0;
wire   [63:0] grp_axi_hls_tg_Pipeline_2_fu_186_wide_buffer_V_d0;
wire    grp_axi_hls_tg_Pipeline_3_fu_194_ap_start;
wire    grp_axi_hls_tg_Pipeline_3_fu_194_ap_done;
wire    grp_axi_hls_tg_Pipeline_3_fu_194_ap_idle;
wire    grp_axi_hls_tg_Pipeline_3_fu_194_ap_ready;
wire    grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWVALID;
wire   [63:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWADDR;
wire   [0:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWID;
wire   [31:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWLEN;
wire   [2:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWSIZE;
wire   [1:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWBURST;
wire   [1:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWLOCK;
wire   [3:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWCACHE;
wire   [2:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWPROT;
wire   [3:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWQOS;
wire   [3:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWREGION;
wire   [0:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWUSER;
wire    grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_WVALID;
wire   [63:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_WDATA;
wire   [7:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_WSTRB;
wire    grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_WLAST;
wire   [0:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_WID;
wire   [0:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_WUSER;
wire    grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARVALID;
wire   [63:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARADDR;
wire   [0:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARID;
wire   [31:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARLEN;
wire   [2:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARSIZE;
wire   [1:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARBURST;
wire   [1:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARLOCK;
wire   [3:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARCACHE;
wire   [2:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARPROT;
wire   [3:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARQOS;
wire   [3:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARREGION;
wire   [0:0] grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARUSER;
wire    grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_RREADY;
wire    grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_BREADY;
wire   [7:0] grp_axi_hls_tg_Pipeline_3_fu_194_narrow_buffer_V_address0;
wire    grp_axi_hls_tg_Pipeline_3_fu_194_narrow_buffer_V_ce0;
wire    grp_axi_hls_tg_Pipeline_3_fu_194_narrow_buffer_V_we0;
wire   [63:0] grp_axi_hls_tg_Pipeline_3_fu_194_narrow_buffer_V_d0;
wire    grp_axi_hls_tg_Pipeline_compute_fu_202_ap_start;
wire    grp_axi_hls_tg_Pipeline_compute_fu_202_ap_done;
wire    grp_axi_hls_tg_Pipeline_compute_fu_202_ap_idle;
wire    grp_axi_hls_tg_Pipeline_compute_fu_202_ap_ready;
wire   [7:0] grp_axi_hls_tg_Pipeline_compute_fu_202_wide_buffer_V_address0;
wire    grp_axi_hls_tg_Pipeline_compute_fu_202_wide_buffer_V_ce0;
wire    grp_axi_hls_tg_Pipeline_compute_fu_202_wide_buffer_V_we0;
wire   [63:0] grp_axi_hls_tg_Pipeline_compute_fu_202_wide_buffer_V_d0;
wire   [7:0] grp_axi_hls_tg_Pipeline_compute_fu_202_wide_buffer_V_address1;
wire    grp_axi_hls_tg_Pipeline_compute_fu_202_wide_buffer_V_ce1;
wire    grp_axi_hls_tg_Pipeline_compute1_fu_208_ap_start;
wire    grp_axi_hls_tg_Pipeline_compute1_fu_208_ap_done;
wire    grp_axi_hls_tg_Pipeline_compute1_fu_208_ap_idle;
wire    grp_axi_hls_tg_Pipeline_compute1_fu_208_ap_ready;
wire   [7:0] grp_axi_hls_tg_Pipeline_compute1_fu_208_narrow_buffer_V_address0;
wire    grp_axi_hls_tg_Pipeline_compute1_fu_208_narrow_buffer_V_ce0;
wire    grp_axi_hls_tg_Pipeline_compute1_fu_208_narrow_buffer_V_we0;
wire   [63:0] grp_axi_hls_tg_Pipeline_compute1_fu_208_narrow_buffer_V_d0;
wire   [7:0] grp_axi_hls_tg_Pipeline_compute1_fu_208_narrow_buffer_V_address1;
wire    grp_axi_hls_tg_Pipeline_compute1_fu_208_narrow_buffer_V_ce1;
wire    grp_axi_hls_tg_Pipeline_6_fu_214_ap_start;
wire    grp_axi_hls_tg_Pipeline_6_fu_214_ap_done;
wire    grp_axi_hls_tg_Pipeline_6_fu_214_ap_idle;
wire    grp_axi_hls_tg_Pipeline_6_fu_214_ap_ready;
wire    grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWVALID;
wire   [63:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWADDR;
wire   [0:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWID;
wire   [31:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWLEN;
wire   [2:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWSIZE;
wire   [1:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWBURST;
wire   [1:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWLOCK;
wire   [3:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWCACHE;
wire   [2:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWPROT;
wire   [3:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWQOS;
wire   [3:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWREGION;
wire   [0:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWUSER;
wire    grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_WVALID;
wire   [63:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_WDATA;
wire   [7:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_WSTRB;
wire    grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_WLAST;
wire   [0:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_WID;
wire   [0:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_WUSER;
wire    grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARVALID;
wire   [63:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARADDR;
wire   [0:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARID;
wire   [31:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARLEN;
wire   [2:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARSIZE;
wire   [1:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARBURST;
wire   [1:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARLOCK;
wire   [3:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARCACHE;
wire   [2:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARPROT;
wire   [3:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARQOS;
wire   [3:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARREGION;
wire   [0:0] grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARUSER;
wire    grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_RREADY;
wire    grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_BREADY;
wire   [7:0] grp_axi_hls_tg_Pipeline_6_fu_214_wide_buffer_V_address0;
wire    grp_axi_hls_tg_Pipeline_6_fu_214_wide_buffer_V_ce0;
wire    grp_axi_hls_tg_Pipeline_7_fu_222_ap_start;
wire    grp_axi_hls_tg_Pipeline_7_fu_222_ap_done;
wire    grp_axi_hls_tg_Pipeline_7_fu_222_ap_idle;
wire    grp_axi_hls_tg_Pipeline_7_fu_222_ap_ready;
wire    grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWVALID;
wire   [63:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWADDR;
wire   [0:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWID;
wire   [31:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWLEN;
wire   [2:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWSIZE;
wire   [1:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWBURST;
wire   [1:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWLOCK;
wire   [3:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWCACHE;
wire   [2:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWPROT;
wire   [3:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWQOS;
wire   [3:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWREGION;
wire   [0:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWUSER;
wire    grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_WVALID;
wire   [63:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_WDATA;
wire   [7:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_WSTRB;
wire    grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_WLAST;
wire   [0:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_WID;
wire   [0:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_WUSER;
wire    grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARVALID;
wire   [63:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARADDR;
wire   [0:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARID;
wire   [31:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARLEN;
wire   [2:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARSIZE;
wire   [1:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARBURST;
wire   [1:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARLOCK;
wire   [3:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARCACHE;
wire   [2:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARPROT;
wire   [3:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARQOS;
wire   [3:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARREGION;
wire   [0:0] grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARUSER;
wire    grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_RREADY;
wire    grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_BREADY;
wire   [7:0] grp_axi_hls_tg_Pipeline_7_fu_222_narrow_buffer_V_address0;
wire    grp_axi_hls_tg_Pipeline_7_fu_222_narrow_buffer_V_ce0;
reg    narrow_port_AWVALID;
wire    narrow_port_AWREADY;
reg   [63:0] narrow_port_AWADDR;
reg   [31:0] narrow_port_AWLEN;
reg    narrow_port_WVALID;
wire    narrow_port_WREADY;
reg    narrow_port_ARVALID;
wire    narrow_port_ARREADY;
reg   [63:0] narrow_port_ARADDR;
reg   [31:0] narrow_port_ARLEN;
wire    narrow_port_RVALID;
reg    narrow_port_RREADY;
wire   [63:0] narrow_port_RDATA;
wire   [8:0] narrow_port_RFIFONUM;
wire    narrow_port_BVALID;
reg    narrow_port_BREADY;
reg    wide_port_AWVALID;
wire    wide_port_AWREADY;
reg   [63:0] wide_port_AWADDR;
reg   [31:0] wide_port_AWLEN;
reg    wide_port_WVALID;
wire    wide_port_WREADY;
reg    wide_port_ARVALID;
wire    wide_port_ARREADY;
reg   [63:0] wide_port_ARADDR;
reg   [31:0] wide_port_ARLEN;
wire    wide_port_RVALID;
reg    wide_port_RREADY;
wire   [63:0] wide_port_RDATA;
wire   [8:0] wide_port_RFIFONUM;
wire    wide_port_BVALID;
reg    wide_port_BREADY;
reg    grp_axi_hls_tg_Pipeline_init_buffers_fu_178_ap_start_reg;
reg    grp_axi_hls_tg_Pipeline_2_fu_186_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg    grp_axi_hls_tg_Pipeline_3_fu_194_ap_start_reg;
reg    grp_axi_hls_tg_Pipeline_compute_fu_202_ap_start_reg;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln72_fu_321_p2;
wire    ap_CS_fsm_state14;
reg    grp_axi_hls_tg_Pipeline_compute1_fu_208_ap_start_reg;
reg    grp_axi_hls_tg_Pipeline_6_fu_214_ap_start_reg;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
reg    grp_axi_hls_tg_Pipeline_7_fu_222_ap_start_reg;
wire  signed [63:0] p_cast_cast_fu_255_p1;
wire  signed [63:0] p_cast1_cast_fu_275_p1;
reg    ap_block_state4_io;
reg    ap_block_state16_io;
reg    ap_block_state23;
reg   [55:0] i_1_fu_110;
wire   [55:0] add_ln1027_fu_293_p2;
reg   [55:0] i_2_fu_122;
wire   [55:0] add_ln1027_1_fu_326_p2;
reg   [55:0] i_3_fu_126;
wire   [55:0] add_ln1027_2_fu_350_p2;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln78_fu_345_p2;
reg   [22:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_block_state12_on_subcall_done;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_block_state14_on_subcall_done;
reg    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
reg    ap_block_state18_on_subcall_done;
reg    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
reg    ap_ST_fsm_state23_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'd1;
#0 grp_axi_hls_tg_Pipeline_init_buffers_fu_178_ap_start_reg = 1'b0;
#0 grp_axi_hls_tg_Pipeline_2_fu_186_ap_start_reg = 1'b0;
#0 grp_axi_hls_tg_Pipeline_3_fu_194_ap_start_reg = 1'b0;
#0 grp_axi_hls_tg_Pipeline_compute_fu_202_ap_start_reg = 1'b0;
#0 grp_axi_hls_tg_Pipeline_compute1_fu_208_ap_start_reg = 1'b0;
#0 grp_axi_hls_tg_Pipeline_6_fu_214_ap_start_reg = 1'b0;
#0 grp_axi_hls_tg_Pipeline_7_fu_222_ap_start_reg = 1'b0;
end

axi_hls_tg_wide_buffer_V_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
wide_buffer_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(wide_buffer_V_address0),
    .ce0(wide_buffer_V_ce0),
    .we0(wide_buffer_V_we0),
    .d0(wide_buffer_V_d0),
    .q0(wide_buffer_V_q0),
    .address1(grp_axi_hls_tg_Pipeline_compute_fu_202_wide_buffer_V_address1),
    .ce1(wide_buffer_V_ce1),
    .q1(wide_buffer_V_q1)
);

axi_hls_tg_wide_buffer_V_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
narrow_buffer_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(narrow_buffer_V_address0),
    .ce0(narrow_buffer_V_ce0),
    .we0(narrow_buffer_V_we0),
    .d0(narrow_buffer_V_d0),
    .q0(narrow_buffer_V_q0),
    .address1(grp_axi_hls_tg_Pipeline_compute1_fu_208_narrow_buffer_V_address1),
    .ce1(narrow_buffer_V_ce1),
    .q1(narrow_buffer_V_q1)
);

axi_hls_tg_axi_hls_tg_Pipeline_init_buffers grp_axi_hls_tg_Pipeline_init_buffers_fu_178(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_axi_hls_tg_Pipeline_init_buffers_fu_178_ap_start),
    .ap_done(grp_axi_hls_tg_Pipeline_init_buffers_fu_178_ap_done),
    .ap_idle(grp_axi_hls_tg_Pipeline_init_buffers_fu_178_ap_idle),
    .ap_ready(grp_axi_hls_tg_Pipeline_init_buffers_fu_178_ap_ready),
    .wide_buffer_V_address0(grp_axi_hls_tg_Pipeline_init_buffers_fu_178_wide_buffer_V_address0),
    .wide_buffer_V_ce0(grp_axi_hls_tg_Pipeline_init_buffers_fu_178_wide_buffer_V_ce0),
    .wide_buffer_V_we0(grp_axi_hls_tg_Pipeline_init_buffers_fu_178_wide_buffer_V_we0),
    .wide_buffer_V_d0(grp_axi_hls_tg_Pipeline_init_buffers_fu_178_wide_buffer_V_d0),
    .narrow_buffer_V_address0(grp_axi_hls_tg_Pipeline_init_buffers_fu_178_narrow_buffer_V_address0),
    .narrow_buffer_V_ce0(grp_axi_hls_tg_Pipeline_init_buffers_fu_178_narrow_buffer_V_ce0),
    .narrow_buffer_V_we0(grp_axi_hls_tg_Pipeline_init_buffers_fu_178_narrow_buffer_V_we0),
    .narrow_buffer_V_d0(grp_axi_hls_tg_Pipeline_init_buffers_fu_178_narrow_buffer_V_d0)
);

axi_hls_tg_axi_hls_tg_Pipeline_2 grp_axi_hls_tg_Pipeline_2_fu_186(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_axi_hls_tg_Pipeline_2_fu_186_ap_start),
    .ap_done(grp_axi_hls_tg_Pipeline_2_fu_186_ap_done),
    .ap_idle(grp_axi_hls_tg_Pipeline_2_fu_186_ap_idle),
    .ap_ready(grp_axi_hls_tg_Pipeline_2_fu_186_ap_ready),
    .m_axi_wide_port_AWVALID(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWVALID),
    .m_axi_wide_port_AWREADY(1'b0),
    .m_axi_wide_port_AWADDR(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWADDR),
    .m_axi_wide_port_AWID(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWID),
    .m_axi_wide_port_AWLEN(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWLEN),
    .m_axi_wide_port_AWSIZE(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWSIZE),
    .m_axi_wide_port_AWBURST(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWBURST),
    .m_axi_wide_port_AWLOCK(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWLOCK),
    .m_axi_wide_port_AWCACHE(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWCACHE),
    .m_axi_wide_port_AWPROT(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWPROT),
    .m_axi_wide_port_AWQOS(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWQOS),
    .m_axi_wide_port_AWREGION(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWREGION),
    .m_axi_wide_port_AWUSER(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_AWUSER),
    .m_axi_wide_port_WVALID(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_WVALID),
    .m_axi_wide_port_WREADY(1'b0),
    .m_axi_wide_port_WDATA(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_WDATA),
    .m_axi_wide_port_WSTRB(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_WSTRB),
    .m_axi_wide_port_WLAST(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_WLAST),
    .m_axi_wide_port_WID(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_WID),
    .m_axi_wide_port_WUSER(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_WUSER),
    .m_axi_wide_port_ARVALID(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARVALID),
    .m_axi_wide_port_ARREADY(wide_port_ARREADY),
    .m_axi_wide_port_ARADDR(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARADDR),
    .m_axi_wide_port_ARID(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARID),
    .m_axi_wide_port_ARLEN(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARLEN),
    .m_axi_wide_port_ARSIZE(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARSIZE),
    .m_axi_wide_port_ARBURST(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARBURST),
    .m_axi_wide_port_ARLOCK(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARLOCK),
    .m_axi_wide_port_ARCACHE(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARCACHE),
    .m_axi_wide_port_ARPROT(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARPROT),
    .m_axi_wide_port_ARQOS(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARQOS),
    .m_axi_wide_port_ARREGION(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARREGION),
    .m_axi_wide_port_ARUSER(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARUSER),
    .m_axi_wide_port_RVALID(wide_port_RVALID),
    .m_axi_wide_port_RREADY(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_RREADY),
    .m_axi_wide_port_RDATA(wide_port_RDATA),
    .m_axi_wide_port_RLAST(1'b0),
    .m_axi_wide_port_RID(1'd0),
    .m_axi_wide_port_RFIFONUM(wide_port_RFIFONUM),
    .m_axi_wide_port_RUSER(1'd0),
    .m_axi_wide_port_RRESP(2'd0),
    .m_axi_wide_port_BVALID(1'b0),
    .m_axi_wide_port_BREADY(grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_BREADY),
    .m_axi_wide_port_BRESP(2'd0),
    .m_axi_wide_port_BID(1'd0),
    .m_axi_wide_port_BUSER(1'd0),
    .p_cast_cast(p_cast_reg_385),
    .wide_buffer_V_address0(grp_axi_hls_tg_Pipeline_2_fu_186_wide_buffer_V_address0),
    .wide_buffer_V_ce0(grp_axi_hls_tg_Pipeline_2_fu_186_wide_buffer_V_ce0),
    .wide_buffer_V_we0(grp_axi_hls_tg_Pipeline_2_fu_186_wide_buffer_V_we0),
    .wide_buffer_V_d0(grp_axi_hls_tg_Pipeline_2_fu_186_wide_buffer_V_d0)
);

axi_hls_tg_axi_hls_tg_Pipeline_3 grp_axi_hls_tg_Pipeline_3_fu_194(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_axi_hls_tg_Pipeline_3_fu_194_ap_start),
    .ap_done(grp_axi_hls_tg_Pipeline_3_fu_194_ap_done),
    .ap_idle(grp_axi_hls_tg_Pipeline_3_fu_194_ap_idle),
    .ap_ready(grp_axi_hls_tg_Pipeline_3_fu_194_ap_ready),
    .m_axi_narrow_port_AWVALID(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWVALID),
    .m_axi_narrow_port_AWREADY(1'b0),
    .m_axi_narrow_port_AWADDR(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWADDR),
    .m_axi_narrow_port_AWID(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWID),
    .m_axi_narrow_port_AWLEN(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWLEN),
    .m_axi_narrow_port_AWSIZE(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWSIZE),
    .m_axi_narrow_port_AWBURST(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWBURST),
    .m_axi_narrow_port_AWLOCK(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWLOCK),
    .m_axi_narrow_port_AWCACHE(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWCACHE),
    .m_axi_narrow_port_AWPROT(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWPROT),
    .m_axi_narrow_port_AWQOS(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWQOS),
    .m_axi_narrow_port_AWREGION(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWREGION),
    .m_axi_narrow_port_AWUSER(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_AWUSER),
    .m_axi_narrow_port_WVALID(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_WVALID),
    .m_axi_narrow_port_WREADY(1'b0),
    .m_axi_narrow_port_WDATA(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_WDATA),
    .m_axi_narrow_port_WSTRB(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_WSTRB),
    .m_axi_narrow_port_WLAST(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_WLAST),
    .m_axi_narrow_port_WID(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_WID),
    .m_axi_narrow_port_WUSER(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_WUSER),
    .m_axi_narrow_port_ARVALID(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARVALID),
    .m_axi_narrow_port_ARREADY(narrow_port_ARREADY),
    .m_axi_narrow_port_ARADDR(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARADDR),
    .m_axi_narrow_port_ARID(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARID),
    .m_axi_narrow_port_ARLEN(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARLEN),
    .m_axi_narrow_port_ARSIZE(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARSIZE),
    .m_axi_narrow_port_ARBURST(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARBURST),
    .m_axi_narrow_port_ARLOCK(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARLOCK),
    .m_axi_narrow_port_ARCACHE(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARCACHE),
    .m_axi_narrow_port_ARPROT(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARPROT),
    .m_axi_narrow_port_ARQOS(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARQOS),
    .m_axi_narrow_port_ARREGION(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARREGION),
    .m_axi_narrow_port_ARUSER(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARUSER),
    .m_axi_narrow_port_RVALID(narrow_port_RVALID),
    .m_axi_narrow_port_RREADY(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_RREADY),
    .m_axi_narrow_port_RDATA(narrow_port_RDATA),
    .m_axi_narrow_port_RLAST(1'b0),
    .m_axi_narrow_port_RID(1'd0),
    .m_axi_narrow_port_RFIFONUM(narrow_port_RFIFONUM),
    .m_axi_narrow_port_RUSER(1'd0),
    .m_axi_narrow_port_RRESP(2'd0),
    .m_axi_narrow_port_BVALID(1'b0),
    .m_axi_narrow_port_BREADY(grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_BREADY),
    .m_axi_narrow_port_BRESP(2'd0),
    .m_axi_narrow_port_BID(1'd0),
    .m_axi_narrow_port_BUSER(1'd0),
    .p_cast1_cast(p_cast1_reg_396),
    .narrow_buffer_V_address0(grp_axi_hls_tg_Pipeline_3_fu_194_narrow_buffer_V_address0),
    .narrow_buffer_V_ce0(grp_axi_hls_tg_Pipeline_3_fu_194_narrow_buffer_V_ce0),
    .narrow_buffer_V_we0(grp_axi_hls_tg_Pipeline_3_fu_194_narrow_buffer_V_we0),
    .narrow_buffer_V_d0(grp_axi_hls_tg_Pipeline_3_fu_194_narrow_buffer_V_d0)
);

axi_hls_tg_axi_hls_tg_Pipeline_compute grp_axi_hls_tg_Pipeline_compute_fu_202(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_axi_hls_tg_Pipeline_compute_fu_202_ap_start),
    .ap_done(grp_axi_hls_tg_Pipeline_compute_fu_202_ap_done),
    .ap_idle(grp_axi_hls_tg_Pipeline_compute_fu_202_ap_idle),
    .ap_ready(grp_axi_hls_tg_Pipeline_compute_fu_202_ap_ready),
    .wide_buffer_V_address0(grp_axi_hls_tg_Pipeline_compute_fu_202_wide_buffer_V_address0),
    .wide_buffer_V_ce0(grp_axi_hls_tg_Pipeline_compute_fu_202_wide_buffer_V_ce0),
    .wide_buffer_V_we0(grp_axi_hls_tg_Pipeline_compute_fu_202_wide_buffer_V_we0),
    .wide_buffer_V_d0(grp_axi_hls_tg_Pipeline_compute_fu_202_wide_buffer_V_d0),
    .wide_buffer_V_address1(grp_axi_hls_tg_Pipeline_compute_fu_202_wide_buffer_V_address1),
    .wide_buffer_V_ce1(grp_axi_hls_tg_Pipeline_compute_fu_202_wide_buffer_V_ce1),
    .wide_buffer_V_q1(wide_buffer_V_q1),
    .traffic_id(traffic_id_read_reg_368)
);

axi_hls_tg_axi_hls_tg_Pipeline_compute1 grp_axi_hls_tg_Pipeline_compute1_fu_208(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_axi_hls_tg_Pipeline_compute1_fu_208_ap_start),
    .ap_done(grp_axi_hls_tg_Pipeline_compute1_fu_208_ap_done),
    .ap_idle(grp_axi_hls_tg_Pipeline_compute1_fu_208_ap_idle),
    .ap_ready(grp_axi_hls_tg_Pipeline_compute1_fu_208_ap_ready),
    .narrow_buffer_V_address0(grp_axi_hls_tg_Pipeline_compute1_fu_208_narrow_buffer_V_address0),
    .narrow_buffer_V_ce0(grp_axi_hls_tg_Pipeline_compute1_fu_208_narrow_buffer_V_ce0),
    .narrow_buffer_V_we0(grp_axi_hls_tg_Pipeline_compute1_fu_208_narrow_buffer_V_we0),
    .narrow_buffer_V_d0(grp_axi_hls_tg_Pipeline_compute1_fu_208_narrow_buffer_V_d0),
    .narrow_buffer_V_address1(grp_axi_hls_tg_Pipeline_compute1_fu_208_narrow_buffer_V_address1),
    .narrow_buffer_V_ce1(grp_axi_hls_tg_Pipeline_compute1_fu_208_narrow_buffer_V_ce1),
    .narrow_buffer_V_q1(narrow_buffer_V_q1),
    .traffic_id(traffic_id_read_reg_368)
);

axi_hls_tg_axi_hls_tg_Pipeline_6 grp_axi_hls_tg_Pipeline_6_fu_214(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_axi_hls_tg_Pipeline_6_fu_214_ap_start),
    .ap_done(grp_axi_hls_tg_Pipeline_6_fu_214_ap_done),
    .ap_idle(grp_axi_hls_tg_Pipeline_6_fu_214_ap_idle),
    .ap_ready(grp_axi_hls_tg_Pipeline_6_fu_214_ap_ready),
    .m_axi_wide_port_AWVALID(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWVALID),
    .m_axi_wide_port_AWREADY(wide_port_AWREADY),
    .m_axi_wide_port_AWADDR(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWADDR),
    .m_axi_wide_port_AWID(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWID),
    .m_axi_wide_port_AWLEN(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWLEN),
    .m_axi_wide_port_AWSIZE(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWSIZE),
    .m_axi_wide_port_AWBURST(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWBURST),
    .m_axi_wide_port_AWLOCK(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWLOCK),
    .m_axi_wide_port_AWCACHE(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWCACHE),
    .m_axi_wide_port_AWPROT(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWPROT),
    .m_axi_wide_port_AWQOS(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWQOS),
    .m_axi_wide_port_AWREGION(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWREGION),
    .m_axi_wide_port_AWUSER(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWUSER),
    .m_axi_wide_port_WVALID(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_WVALID),
    .m_axi_wide_port_WREADY(wide_port_WREADY),
    .m_axi_wide_port_WDATA(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_WDATA),
    .m_axi_wide_port_WSTRB(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_WSTRB),
    .m_axi_wide_port_WLAST(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_WLAST),
    .m_axi_wide_port_WID(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_WID),
    .m_axi_wide_port_WUSER(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_WUSER),
    .m_axi_wide_port_ARVALID(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARVALID),
    .m_axi_wide_port_ARREADY(1'b0),
    .m_axi_wide_port_ARADDR(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARADDR),
    .m_axi_wide_port_ARID(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARID),
    .m_axi_wide_port_ARLEN(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARLEN),
    .m_axi_wide_port_ARSIZE(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARSIZE),
    .m_axi_wide_port_ARBURST(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARBURST),
    .m_axi_wide_port_ARLOCK(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARLOCK),
    .m_axi_wide_port_ARCACHE(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARCACHE),
    .m_axi_wide_port_ARPROT(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARPROT),
    .m_axi_wide_port_ARQOS(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARQOS),
    .m_axi_wide_port_ARREGION(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARREGION),
    .m_axi_wide_port_ARUSER(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_ARUSER),
    .m_axi_wide_port_RVALID(1'b0),
    .m_axi_wide_port_RREADY(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_RREADY),
    .m_axi_wide_port_RDATA(64'd0),
    .m_axi_wide_port_RLAST(1'b0),
    .m_axi_wide_port_RID(1'd0),
    .m_axi_wide_port_RFIFONUM(9'd0),
    .m_axi_wide_port_RUSER(1'd0),
    .m_axi_wide_port_RRESP(2'd0),
    .m_axi_wide_port_BVALID(wide_port_BVALID),
    .m_axi_wide_port_BREADY(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_BREADY),
    .m_axi_wide_port_BRESP(2'd0),
    .m_axi_wide_port_BID(1'd0),
    .m_axi_wide_port_BUSER(1'd0),
    .p_cast_cast(p_cast_reg_385),
    .wide_buffer_V_address0(grp_axi_hls_tg_Pipeline_6_fu_214_wide_buffer_V_address0),
    .wide_buffer_V_ce0(grp_axi_hls_tg_Pipeline_6_fu_214_wide_buffer_V_ce0),
    .wide_buffer_V_q0(wide_buffer_V_q0)
);

axi_hls_tg_axi_hls_tg_Pipeline_7 grp_axi_hls_tg_Pipeline_7_fu_222(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_axi_hls_tg_Pipeline_7_fu_222_ap_start),
    .ap_done(grp_axi_hls_tg_Pipeline_7_fu_222_ap_done),
    .ap_idle(grp_axi_hls_tg_Pipeline_7_fu_222_ap_idle),
    .ap_ready(grp_axi_hls_tg_Pipeline_7_fu_222_ap_ready),
    .m_axi_narrow_port_AWVALID(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWVALID),
    .m_axi_narrow_port_AWREADY(narrow_port_AWREADY),
    .m_axi_narrow_port_AWADDR(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWADDR),
    .m_axi_narrow_port_AWID(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWID),
    .m_axi_narrow_port_AWLEN(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWLEN),
    .m_axi_narrow_port_AWSIZE(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWSIZE),
    .m_axi_narrow_port_AWBURST(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWBURST),
    .m_axi_narrow_port_AWLOCK(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWLOCK),
    .m_axi_narrow_port_AWCACHE(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWCACHE),
    .m_axi_narrow_port_AWPROT(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWPROT),
    .m_axi_narrow_port_AWQOS(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWQOS),
    .m_axi_narrow_port_AWREGION(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWREGION),
    .m_axi_narrow_port_AWUSER(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWUSER),
    .m_axi_narrow_port_WVALID(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_WVALID),
    .m_axi_narrow_port_WREADY(narrow_port_WREADY),
    .m_axi_narrow_port_WDATA(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_WDATA),
    .m_axi_narrow_port_WSTRB(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_WSTRB),
    .m_axi_narrow_port_WLAST(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_WLAST),
    .m_axi_narrow_port_WID(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_WID),
    .m_axi_narrow_port_WUSER(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_WUSER),
    .m_axi_narrow_port_ARVALID(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARVALID),
    .m_axi_narrow_port_ARREADY(1'b0),
    .m_axi_narrow_port_ARADDR(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARADDR),
    .m_axi_narrow_port_ARID(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARID),
    .m_axi_narrow_port_ARLEN(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARLEN),
    .m_axi_narrow_port_ARSIZE(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARSIZE),
    .m_axi_narrow_port_ARBURST(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARBURST),
    .m_axi_narrow_port_ARLOCK(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARLOCK),
    .m_axi_narrow_port_ARCACHE(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARCACHE),
    .m_axi_narrow_port_ARPROT(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARPROT),
    .m_axi_narrow_port_ARQOS(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARQOS),
    .m_axi_narrow_port_ARREGION(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARREGION),
    .m_axi_narrow_port_ARUSER(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_ARUSER),
    .m_axi_narrow_port_RVALID(1'b0),
    .m_axi_narrow_port_RREADY(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_RREADY),
    .m_axi_narrow_port_RDATA(64'd0),
    .m_axi_narrow_port_RLAST(1'b0),
    .m_axi_narrow_port_RID(1'd0),
    .m_axi_narrow_port_RFIFONUM(9'd0),
    .m_axi_narrow_port_RUSER(1'd0),
    .m_axi_narrow_port_RRESP(2'd0),
    .m_axi_narrow_port_BVALID(narrow_port_BVALID),
    .m_axi_narrow_port_BREADY(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_BREADY),
    .m_axi_narrow_port_BRESP(2'd0),
    .m_axi_narrow_port_BID(1'd0),
    .m_axi_narrow_port_BUSER(1'd0),
    .p_cast1_cast(p_cast1_reg_396),
    .narrow_buffer_V_address0(grp_axi_hls_tg_Pipeline_7_fu_222_narrow_buffer_V_address0),
    .narrow_buffer_V_ce0(grp_axi_hls_tg_Pipeline_7_fu_222_narrow_buffer_V_ce0),
    .narrow_buffer_V_q0(narrow_buffer_V_q0)
);

axi_hls_tg_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .wide_port_offset(wide_port_offset),
    .narrow_port_offset(narrow_port_offset),
    .traffic_dim(traffic_dim),
    .compute_dim(compute_dim),
    .traffic_id(traffic_id),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

axi_hls_tg_narrow_port_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_NARROW_PORT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_NARROW_PORT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_NARROW_PORT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_NARROW_PORT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_NARROW_PORT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_NARROW_PORT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_NARROW_PORT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_NARROW_PORT_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_NARROW_PORT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_NARROW_PORT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_NARROW_PORT_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 64 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
narrow_port_m_axi_U(
    .AWVALID(m_axi_narrow_port_AWVALID),
    .AWREADY(m_axi_narrow_port_AWREADY),
    .AWADDR(m_axi_narrow_port_AWADDR),
    .AWID(m_axi_narrow_port_AWID),
    .AWLEN(m_axi_narrow_port_AWLEN),
    .AWSIZE(m_axi_narrow_port_AWSIZE),
    .AWBURST(m_axi_narrow_port_AWBURST),
    .AWLOCK(m_axi_narrow_port_AWLOCK),
    .AWCACHE(m_axi_narrow_port_AWCACHE),
    .AWPROT(m_axi_narrow_port_AWPROT),
    .AWQOS(m_axi_narrow_port_AWQOS),
    .AWREGION(m_axi_narrow_port_AWREGION),
    .AWUSER(m_axi_narrow_port_AWUSER),
    .WVALID(m_axi_narrow_port_WVALID),
    .WREADY(m_axi_narrow_port_WREADY),
    .WDATA(m_axi_narrow_port_WDATA),
    .WSTRB(m_axi_narrow_port_WSTRB),
    .WLAST(m_axi_narrow_port_WLAST),
    .WID(m_axi_narrow_port_WID),
    .WUSER(m_axi_narrow_port_WUSER),
    .ARVALID(m_axi_narrow_port_ARVALID),
    .ARREADY(m_axi_narrow_port_ARREADY),
    .ARADDR(m_axi_narrow_port_ARADDR),
    .ARID(m_axi_narrow_port_ARID),
    .ARLEN(m_axi_narrow_port_ARLEN),
    .ARSIZE(m_axi_narrow_port_ARSIZE),
    .ARBURST(m_axi_narrow_port_ARBURST),
    .ARLOCK(m_axi_narrow_port_ARLOCK),
    .ARCACHE(m_axi_narrow_port_ARCACHE),
    .ARPROT(m_axi_narrow_port_ARPROT),
    .ARQOS(m_axi_narrow_port_ARQOS),
    .ARREGION(m_axi_narrow_port_ARREGION),
    .ARUSER(m_axi_narrow_port_ARUSER),
    .RVALID(m_axi_narrow_port_RVALID),
    .RREADY(m_axi_narrow_port_RREADY),
    .RDATA(m_axi_narrow_port_RDATA),
    .RLAST(m_axi_narrow_port_RLAST),
    .RID(m_axi_narrow_port_RID),
    .RUSER(m_axi_narrow_port_RUSER),
    .RRESP(m_axi_narrow_port_RRESP),
    .BVALID(m_axi_narrow_port_BVALID),
    .BREADY(m_axi_narrow_port_BREADY),
    .BRESP(m_axi_narrow_port_BRESP),
    .BID(m_axi_narrow_port_BID),
    .BUSER(m_axi_narrow_port_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(narrow_port_ARVALID),
    .I_ARREADY(narrow_port_ARREADY),
    .I_ARADDR(narrow_port_ARADDR),
    .I_ARLEN(narrow_port_ARLEN),
    .I_RVALID(narrow_port_RVALID),
    .I_RREADY(narrow_port_RREADY),
    .I_RDATA(narrow_port_RDATA),
    .I_RFIFONUM(narrow_port_RFIFONUM),
    .I_AWVALID(narrow_port_AWVALID),
    .I_AWREADY(narrow_port_AWREADY),
    .I_AWADDR(narrow_port_AWADDR),
    .I_AWLEN(narrow_port_AWLEN),
    .I_WVALID(narrow_port_WVALID),
    .I_WREADY(narrow_port_WREADY),
    .I_WDATA(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_WDATA),
    .I_WSTRB(grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_WSTRB),
    .I_BVALID(narrow_port_BVALID),
    .I_BREADY(narrow_port_BREADY)
);

axi_hls_tg_wide_port_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_WIDE_PORT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_WIDE_PORT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_WIDE_PORT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_WIDE_PORT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_WIDE_PORT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_WIDE_PORT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_WIDE_PORT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_WIDE_PORT_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_WIDE_PORT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_WIDE_PORT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_WIDE_PORT_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 64 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
wide_port_m_axi_U(
    .AWVALID(m_axi_wide_port_AWVALID),
    .AWREADY(m_axi_wide_port_AWREADY),
    .AWADDR(m_axi_wide_port_AWADDR),
    .AWID(m_axi_wide_port_AWID),
    .AWLEN(m_axi_wide_port_AWLEN),
    .AWSIZE(m_axi_wide_port_AWSIZE),
    .AWBURST(m_axi_wide_port_AWBURST),
    .AWLOCK(m_axi_wide_port_AWLOCK),
    .AWCACHE(m_axi_wide_port_AWCACHE),
    .AWPROT(m_axi_wide_port_AWPROT),
    .AWQOS(m_axi_wide_port_AWQOS),
    .AWREGION(m_axi_wide_port_AWREGION),
    .AWUSER(m_axi_wide_port_AWUSER),
    .WVALID(m_axi_wide_port_WVALID),
    .WREADY(m_axi_wide_port_WREADY),
    .WDATA(m_axi_wide_port_WDATA),
    .WSTRB(m_axi_wide_port_WSTRB),
    .WLAST(m_axi_wide_port_WLAST),
    .WID(m_axi_wide_port_WID),
    .WUSER(m_axi_wide_port_WUSER),
    .ARVALID(m_axi_wide_port_ARVALID),
    .ARREADY(m_axi_wide_port_ARREADY),
    .ARADDR(m_axi_wide_port_ARADDR),
    .ARID(m_axi_wide_port_ARID),
    .ARLEN(m_axi_wide_port_ARLEN),
    .ARSIZE(m_axi_wide_port_ARSIZE),
    .ARBURST(m_axi_wide_port_ARBURST),
    .ARLOCK(m_axi_wide_port_ARLOCK),
    .ARCACHE(m_axi_wide_port_ARCACHE),
    .ARPROT(m_axi_wide_port_ARPROT),
    .ARQOS(m_axi_wide_port_ARQOS),
    .ARREGION(m_axi_wide_port_ARREGION),
    .ARUSER(m_axi_wide_port_ARUSER),
    .RVALID(m_axi_wide_port_RVALID),
    .RREADY(m_axi_wide_port_RREADY),
    .RDATA(m_axi_wide_port_RDATA),
    .RLAST(m_axi_wide_port_RLAST),
    .RID(m_axi_wide_port_RID),
    .RUSER(m_axi_wide_port_RUSER),
    .RRESP(m_axi_wide_port_RRESP),
    .BVALID(m_axi_wide_port_BVALID),
    .BREADY(m_axi_wide_port_BREADY),
    .BRESP(m_axi_wide_port_BRESP),
    .BID(m_axi_wide_port_BID),
    .BUSER(m_axi_wide_port_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(wide_port_ARVALID),
    .I_ARREADY(wide_port_ARREADY),
    .I_ARADDR(wide_port_ARADDR),
    .I_ARLEN(wide_port_ARLEN),
    .I_RVALID(wide_port_RVALID),
    .I_RREADY(wide_port_RREADY),
    .I_RDATA(wide_port_RDATA),
    .I_RFIFONUM(wide_port_RFIFONUM),
    .I_AWVALID(wide_port_AWVALID),
    .I_AWREADY(wide_port_AWREADY),
    .I_AWADDR(wide_port_AWADDR),
    .I_AWLEN(wide_port_AWLEN),
    .I_WVALID(wide_port_WVALID),
    .I_WREADY(wide_port_WREADY),
    .I_WDATA(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_WDATA),
    .I_WSTRB(grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_WSTRB),
    .I_BVALID(wide_port_BVALID),
    .I_BREADY(wide_port_BREADY)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_axi_hls_tg_Pipeline_2_fu_186_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_axi_hls_tg_Pipeline_2_fu_186_ap_start_reg <= 1'b1;
        end else if ((grp_axi_hls_tg_Pipeline_2_fu_186_ap_ready == 1'b1)) begin
            grp_axi_hls_tg_Pipeline_2_fu_186_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_axi_hls_tg_Pipeline_3_fu_194_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_axi_hls_tg_Pipeline_3_fu_194_ap_start_reg <= 1'b1;
        end else if ((grp_axi_hls_tg_Pipeline_3_fu_194_ap_ready == 1'b1)) begin
            grp_axi_hls_tg_Pipeline_3_fu_194_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_axi_hls_tg_Pipeline_6_fu_214_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_axi_hls_tg_Pipeline_6_fu_214_ap_start_reg <= 1'b1;
        end else if ((grp_axi_hls_tg_Pipeline_6_fu_214_ap_ready == 1'b1)) begin
            grp_axi_hls_tg_Pipeline_6_fu_214_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_axi_hls_tg_Pipeline_7_fu_222_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_axi_hls_tg_Pipeline_7_fu_222_ap_start_reg <= 1'b1;
        end else if ((grp_axi_hls_tg_Pipeline_7_fu_222_ap_ready == 1'b1)) begin
            grp_axi_hls_tg_Pipeline_7_fu_222_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_axi_hls_tg_Pipeline_compute1_fu_208_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln72_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
            grp_axi_hls_tg_Pipeline_compute1_fu_208_ap_start_reg <= 1'b1;
        end else if ((grp_axi_hls_tg_Pipeline_compute1_fu_208_ap_ready == 1'b1)) begin
            grp_axi_hls_tg_Pipeline_compute1_fu_208_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_axi_hls_tg_Pipeline_compute_fu_202_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln72_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
            grp_axi_hls_tg_Pipeline_compute_fu_202_ap_start_reg <= 1'b1;
        end else if ((grp_axi_hls_tg_Pipeline_compute_fu_202_ap_ready == 1'b1)) begin
            grp_axi_hls_tg_Pipeline_compute_fu_202_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_axi_hls_tg_Pipeline_init_buffers_fu_178_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_axi_hls_tg_Pipeline_init_buffers_fu_178_ap_start_reg <= 1'b1;
        end else if ((grp_axi_hls_tg_Pipeline_init_buffers_fu_178_ap_ready == 1'b1)) begin
            grp_axi_hls_tg_Pipeline_init_buffers_fu_178_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_1_fu_110 <= 56'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln66_fu_288_p2 == 1'd0))) begin
        i_1_fu_110 <= add_ln1027_fu_293_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln66_fu_288_p2 == 1'd1))) begin
        i_2_fu_122 <= 56'd0;
    end else if (((icmp_ln72_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        i_2_fu_122 <= add_ln1027_1_fu_326_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln72_fu_321_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        i_3_fu_126 <= 56'd0;
    end else if (((icmp_ln78_fu_345_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        i_3_fu_126 <= add_ln1027_2_fu_350_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        compute_dim_read_reg_374 <= compute_dim;
        div_i_i_cast_reg_379 <= {{traffic_dim[63:8]}};
        narrow_port_addr_reg_402 <= p_cast1_cast_fu_275_p1;
        p_cast1_reg_396 <= {{narrow_port_offset[63:3]}};
        p_cast_reg_385 <= {{wide_port_offset[63:3]}};
        traffic_id_read_reg_368 <= traffic_id;
        wide_port_addr_reg_391 <= p_cast_cast_fu_255_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln66_fu_288_p2 == 1'd1))) begin
        trunc_ln_reg_417 <= {{compute_dim_read_reg_374[63:8]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state12_on_subcall_done)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state14_on_subcall_done)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state16_io)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

assign ap_ST_fsm_state17_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state18_on_subcall_done)) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

always @ (*) begin
    if (((wide_port_BVALID == 1'b0) | (narrow_port_BVALID == 1'b0))) begin
        ap_ST_fsm_state23_blk = 1'b1;
    end else begin
        ap_ST_fsm_state23_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_axi_hls_tg_Pipeline_init_buffers_fu_178_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state4_io)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln78_fu_345_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_fu_345_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        narrow_buffer_V_address0 = grp_axi_hls_tg_Pipeline_7_fu_222_narrow_buffer_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        narrow_buffer_V_address0 = grp_axi_hls_tg_Pipeline_compute1_fu_208_narrow_buffer_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        narrow_buffer_V_address0 = grp_axi_hls_tg_Pipeline_3_fu_194_narrow_buffer_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        narrow_buffer_V_address0 = grp_axi_hls_tg_Pipeline_init_buffers_fu_178_narrow_buffer_V_address0;
    end else begin
        narrow_buffer_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        narrow_buffer_V_ce0 = grp_axi_hls_tg_Pipeline_7_fu_222_narrow_buffer_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        narrow_buffer_V_ce0 = grp_axi_hls_tg_Pipeline_compute1_fu_208_narrow_buffer_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        narrow_buffer_V_ce0 = grp_axi_hls_tg_Pipeline_3_fu_194_narrow_buffer_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        narrow_buffer_V_ce0 = grp_axi_hls_tg_Pipeline_init_buffers_fu_178_narrow_buffer_V_ce0;
    end else begin
        narrow_buffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        narrow_buffer_V_ce1 = grp_axi_hls_tg_Pipeline_compute1_fu_208_narrow_buffer_V_ce1;
    end else begin
        narrow_buffer_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        narrow_buffer_V_d0 = grp_axi_hls_tg_Pipeline_compute1_fu_208_narrow_buffer_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        narrow_buffer_V_d0 = grp_axi_hls_tg_Pipeline_3_fu_194_narrow_buffer_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        narrow_buffer_V_d0 = grp_axi_hls_tg_Pipeline_init_buffers_fu_178_narrow_buffer_V_d0;
    end else begin
        narrow_buffer_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        narrow_buffer_V_we0 = grp_axi_hls_tg_Pipeline_compute1_fu_208_narrow_buffer_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        narrow_buffer_V_we0 = grp_axi_hls_tg_Pipeline_3_fu_194_narrow_buffer_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        narrow_buffer_V_we0 = grp_axi_hls_tg_Pipeline_init_buffers_fu_178_narrow_buffer_V_we0;
    end else begin
        narrow_buffer_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4_io) & (1'b1 == ap_CS_fsm_state4))) begin
        narrow_port_ARADDR = narrow_port_addr_reg_402;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        narrow_port_ARADDR = grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARADDR;
    end else begin
        narrow_port_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4_io) & (1'b1 == ap_CS_fsm_state4))) begin
        narrow_port_ARLEN = 32'd256;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        narrow_port_ARLEN = grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARLEN;
    end else begin
        narrow_port_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4_io) & (1'b1 == ap_CS_fsm_state4))) begin
        narrow_port_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        narrow_port_ARVALID = grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_ARVALID;
    end else begin
        narrow_port_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16_io) & (1'b1 == ap_CS_fsm_state16))) begin
        narrow_port_AWADDR = narrow_port_addr_reg_402;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        narrow_port_AWADDR = grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWADDR;
    end else begin
        narrow_port_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16_io) & (1'b1 == ap_CS_fsm_state16))) begin
        narrow_port_AWLEN = 32'd256;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        narrow_port_AWLEN = grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWLEN;
    end else begin
        narrow_port_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16_io) & (1'b1 == ap_CS_fsm_state16))) begin
        narrow_port_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        narrow_port_AWVALID = grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_AWVALID;
    end else begin
        narrow_port_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((wide_port_BVALID == 1'b0) | (narrow_port_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state23))) begin
        narrow_port_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        narrow_port_BREADY = grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_BREADY;
    end else begin
        narrow_port_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        narrow_port_RREADY = grp_axi_hls_tg_Pipeline_3_fu_194_m_axi_narrow_port_RREADY;
    end else begin
        narrow_port_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        narrow_port_WVALID = grp_axi_hls_tg_Pipeline_7_fu_222_m_axi_narrow_port_WVALID;
    end else begin
        narrow_port_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        narrow_port_blk_n_AR = m_axi_narrow_port_ARREADY;
    end else begin
        narrow_port_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        narrow_port_blk_n_AW = m_axi_narrow_port_AWREADY;
    end else begin
        narrow_port_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        narrow_port_blk_n_B = m_axi_narrow_port_BVALID;
    end else begin
        narrow_port_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        wide_buffer_V_address0 = grp_axi_hls_tg_Pipeline_6_fu_214_wide_buffer_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        wide_buffer_V_address0 = grp_axi_hls_tg_Pipeline_compute_fu_202_wide_buffer_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        wide_buffer_V_address0 = grp_axi_hls_tg_Pipeline_2_fu_186_wide_buffer_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        wide_buffer_V_address0 = grp_axi_hls_tg_Pipeline_init_buffers_fu_178_wide_buffer_V_address0;
    end else begin
        wide_buffer_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        wide_buffer_V_ce0 = grp_axi_hls_tg_Pipeline_6_fu_214_wide_buffer_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        wide_buffer_V_ce0 = grp_axi_hls_tg_Pipeline_compute_fu_202_wide_buffer_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        wide_buffer_V_ce0 = grp_axi_hls_tg_Pipeline_2_fu_186_wide_buffer_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        wide_buffer_V_ce0 = grp_axi_hls_tg_Pipeline_init_buffers_fu_178_wide_buffer_V_ce0;
    end else begin
        wide_buffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        wide_buffer_V_ce1 = grp_axi_hls_tg_Pipeline_compute_fu_202_wide_buffer_V_ce1;
    end else begin
        wide_buffer_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        wide_buffer_V_d0 = grp_axi_hls_tg_Pipeline_compute_fu_202_wide_buffer_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        wide_buffer_V_d0 = grp_axi_hls_tg_Pipeline_2_fu_186_wide_buffer_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        wide_buffer_V_d0 = grp_axi_hls_tg_Pipeline_init_buffers_fu_178_wide_buffer_V_d0;
    end else begin
        wide_buffer_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        wide_buffer_V_we0 = grp_axi_hls_tg_Pipeline_compute_fu_202_wide_buffer_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        wide_buffer_V_we0 = grp_axi_hls_tg_Pipeline_2_fu_186_wide_buffer_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        wide_buffer_V_we0 = grp_axi_hls_tg_Pipeline_init_buffers_fu_178_wide_buffer_V_we0;
    end else begin
        wide_buffer_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4_io) & (1'b1 == ap_CS_fsm_state4))) begin
        wide_port_ARADDR = wide_port_addr_reg_391;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        wide_port_ARADDR = grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARADDR;
    end else begin
        wide_port_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4_io) & (1'b1 == ap_CS_fsm_state4))) begin
        wide_port_ARLEN = 32'd256;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        wide_port_ARLEN = grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARLEN;
    end else begin
        wide_port_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4_io) & (1'b1 == ap_CS_fsm_state4))) begin
        wide_port_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        wide_port_ARVALID = grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_ARVALID;
    end else begin
        wide_port_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16_io) & (1'b1 == ap_CS_fsm_state16))) begin
        wide_port_AWADDR = wide_port_addr_reg_391;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        wide_port_AWADDR = grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWADDR;
    end else begin
        wide_port_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16_io) & (1'b1 == ap_CS_fsm_state16))) begin
        wide_port_AWLEN = 32'd256;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        wide_port_AWLEN = grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWLEN;
    end else begin
        wide_port_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16_io) & (1'b1 == ap_CS_fsm_state16))) begin
        wide_port_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        wide_port_AWVALID = grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_AWVALID;
    end else begin
        wide_port_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((wide_port_BVALID == 1'b0) | (narrow_port_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state23))) begin
        wide_port_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        wide_port_BREADY = grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_BREADY;
    end else begin
        wide_port_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        wide_port_RREADY = grp_axi_hls_tg_Pipeline_2_fu_186_m_axi_wide_port_RREADY;
    end else begin
        wide_port_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        wide_port_WVALID = grp_axi_hls_tg_Pipeline_6_fu_214_m_axi_wide_port_WVALID;
    end else begin
        wide_port_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        wide_port_blk_n_AR = m_axi_wide_port_ARREADY;
    end else begin
        wide_port_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        wide_port_blk_n_AW = m_axi_wide_port_AWREADY;
    end else begin
        wide_port_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        wide_port_blk_n_B = m_axi_wide_port_BVALID;
    end else begin
        wide_port_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_axi_hls_tg_Pipeline_init_buffers_fu_178_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln66_fu_288_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b0 == ap_block_state4_io) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b0 == ap_block_state12_on_subcall_done) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln72_fu_321_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln78_fu_345_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b0 == ap_block_state16_io) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b0 == ap_block_state18_on_subcall_done) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if ((~((wide_port_BVALID == 1'b0) | (narrow_port_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1027_1_fu_326_p2 = (i_2_fu_122 + 56'd1);

assign add_ln1027_2_fu_350_p2 = (i_3_fu_126 + 56'd1);

assign add_ln1027_fu_293_p2 = (i_1_fu_110 + 56'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state12_on_subcall_done = ((grp_axi_hls_tg_Pipeline_3_fu_194_ap_done == 1'b0) | (grp_axi_hls_tg_Pipeline_2_fu_186_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state14_on_subcall_done = ((grp_axi_hls_tg_Pipeline_compute1_fu_208_ap_done == 1'b0) | (grp_axi_hls_tg_Pipeline_compute_fu_202_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state16_io = ((wide_port_AWREADY == 1'b0) | (narrow_port_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state18_on_subcall_done = ((grp_axi_hls_tg_Pipeline_7_fu_222_ap_done == 1'b0) | (grp_axi_hls_tg_Pipeline_6_fu_214_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state23 = ((wide_port_BVALID == 1'b0) | (narrow_port_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state4_io = ((wide_port_ARREADY == 1'b0) | (narrow_port_ARREADY == 1'b0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_axi_hls_tg_Pipeline_2_fu_186_ap_start = grp_axi_hls_tg_Pipeline_2_fu_186_ap_start_reg;

assign grp_axi_hls_tg_Pipeline_3_fu_194_ap_start = grp_axi_hls_tg_Pipeline_3_fu_194_ap_start_reg;

assign grp_axi_hls_tg_Pipeline_6_fu_214_ap_start = grp_axi_hls_tg_Pipeline_6_fu_214_ap_start_reg;

assign grp_axi_hls_tg_Pipeline_7_fu_222_ap_start = grp_axi_hls_tg_Pipeline_7_fu_222_ap_start_reg;

assign grp_axi_hls_tg_Pipeline_compute1_fu_208_ap_start = grp_axi_hls_tg_Pipeline_compute1_fu_208_ap_start_reg;

assign grp_axi_hls_tg_Pipeline_compute_fu_202_ap_start = grp_axi_hls_tg_Pipeline_compute_fu_202_ap_start_reg;

assign grp_axi_hls_tg_Pipeline_init_buffers_fu_178_ap_start = grp_axi_hls_tg_Pipeline_init_buffers_fu_178_ap_start_reg;

assign icmp_ln66_fu_288_p2 = ((i_1_fu_110 == div_i_i_cast_reg_379) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_321_p2 = ((i_2_fu_122 == trunc_ln_reg_417) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_345_p2 = ((i_3_fu_126 == div_i_i_cast_reg_379) ? 1'b1 : 1'b0);

assign p_cast1_cast_fu_275_p1 = p_cast1_fu_265_p4;

assign p_cast1_fu_265_p4 = {{narrow_port_offset[63:3]}};

assign p_cast_cast_fu_255_p1 = p_cast_fu_245_p4;

assign p_cast_fu_245_p4 = {{wide_port_offset[63:3]}};

endmodule //axi_hls_tg
